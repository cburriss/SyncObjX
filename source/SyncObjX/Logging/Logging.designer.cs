#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncEngine.Logging.LinqToSqlClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AZIntegration")]
	public partial class LoggingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEntityBatchHistory(EntityBatchHistory instance);
    partial void UpdateEntityBatchHistory(EntityBatchHistory instance);
    partial void DeleteEntityBatchHistory(EntityBatchHistory instance);
    partial void InsertEntityBatchHistoryDetail(EntityBatchHistoryDetail instance);
    partial void UpdateEntityBatchHistoryDetail(EntityBatchHistoryDetail instance);
    partial void DeleteEntityBatchHistoryDetail(EntityBatchHistoryDetail instance);
    partial void InsertJobDataSourceHistory(JobDataSourceHistory instance);
    partial void UpdateJobDataSourceHistory(JobDataSourceHistory instance);
    partial void DeleteJobDataSourceHistory(JobDataSourceHistory instance);
    partial void InsertJobHistory(JobHistory instance);
    partial void UpdateJobHistory(JobHistory instance);
    partial void DeleteJobHistory(JobHistory instance);
    partial void InsertJobStepHistory(JobStepHistory instance);
    partial void UpdateJobStepHistory(JobStepHistory instance);
    partial void DeleteJobStepHistory(JobStepHistory instance);
    partial void InsertLogEntry(LogEntry instance);
    partial void UpdateLogEntry(LogEntry instance);
    partial void DeleteLogEntry(LogEntry instance);
    partial void InsertLogEntryType(LogEntryType instance);
    partial void UpdateLogEntryType(LogEntryType instance);
    partial void DeleteLogEntryType(LogEntryType instance);
    partial void InsertLoggingLevel(LoggingLevel instance);
    partial void UpdateLoggingLevel(LoggingLevel instance);
    partial void DeleteLoggingLevel(LoggingLevel instance);
    #endregion
		
		public LoggingDataContext() : 
				base(global::SyncEngine.Logging.Properties.Settings.Default.AZIntegrationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LoggingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoggingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoggingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoggingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EntityBatchHistory> EntityBatchHistories
		{
			get
			{
				return this.GetTable<EntityBatchHistory>();
			}
		}
		
		public System.Data.Linq.Table<EntityBatchHistoryDetail> EntityBatchHistoryDetails
		{
			get
			{
				return this.GetTable<EntityBatchHistoryDetail>();
			}
		}
		
		public System.Data.Linq.Table<JobDataSourceHistory> JobDataSourceHistories
		{
			get
			{
				return this.GetTable<JobDataSourceHistory>();
			}
		}
		
		public System.Data.Linq.Table<JobHistory> JobHistories
		{
			get
			{
				return this.GetTable<JobHistory>();
			}
		}
		
		public System.Data.Linq.Table<JobStepHistory> JobStepHistories
		{
			get
			{
				return this.GetTable<JobStepHistory>();
			}
		}
		
		public System.Data.Linq.Table<LogEntry> LogEntries
		{
			get
			{
				return this.GetTable<LogEntry>();
			}
		}
		
		public System.Data.Linq.Table<LogEntryType> LogEntryTypes
		{
			get
			{
				return this.GetTable<LogEntryType>();
			}
		}
		
		public System.Data.Linq.Table<LoggingLevel> LoggingLevels
		{
			get
			{
				return this.GetTable<LoggingLevel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityBatchHistory")]
	public partial class EntityBatchHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityBatchHistorylId;
		
		private int _JobStepHistoryId;
		
		private string _EntityName;
		
		private string _EntityKeyFields;
		
		private int _NumberOfInserts;
		
		private int _NumberOfUpdates;
		
		private int _NumberOfDeletions;
		
		private int _NumberOfErrors;
		
		private EntitySet<EntityBatchHistoryDetail> _EntityBatchHistoryDetails;
		
		private EntityRef<JobStepHistory> _JobStepHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityBatchHistorylIdChanging(int value);
    partial void OnEntityBatchHistorylIdChanged();
    partial void OnJobStepHistoryIdChanging(int value);
    partial void OnJobStepHistoryIdChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnEntityKeyFieldsChanging(string value);
    partial void OnEntityKeyFieldsChanged();
    partial void OnNumberOfInsertsChanging(int value);
    partial void OnNumberOfInsertsChanged();
    partial void OnNumberOfUpdatesChanging(int value);
    partial void OnNumberOfUpdatesChanged();
    partial void OnNumberOfDeletionsChanging(int value);
    partial void OnNumberOfDeletionsChanged();
    partial void OnNumberOfErrorsChanging(int value);
    partial void OnNumberOfErrorsChanged();
    #endregion
		
		public EntityBatchHistory()
		{
			this._EntityBatchHistoryDetails = new EntitySet<EntityBatchHistoryDetail>(new Action<EntityBatchHistoryDetail>(this.attach_EntityBatchHistoryDetails), new Action<EntityBatchHistoryDetail>(this.detach_EntityBatchHistoryDetails));
			this._JobStepHistory = default(EntityRef<JobStepHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityBatchHistorylId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntityBatchHistorylId
		{
			get
			{
				return this._EntityBatchHistorylId;
			}
			set
			{
				if ((this._EntityBatchHistorylId != value))
				{
					this.OnEntityBatchHistorylIdChanging(value);
					this.SendPropertyChanging();
					this._EntityBatchHistorylId = value;
					this.SendPropertyChanged("EntityBatchHistorylId");
					this.OnEntityBatchHistorylIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepHistoryId", DbType="Int NOT NULL")]
		public int JobStepHistoryId
		{
			get
			{
				return this._JobStepHistoryId;
			}
			set
			{
				if ((this._JobStepHistoryId != value))
				{
					if (this._JobStepHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobStepHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepHistoryId = value;
					this.SendPropertyChanged("JobStepHistoryId");
					this.OnJobStepHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKeyFields", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EntityKeyFields
		{
			get
			{
				return this._EntityKeyFields;
			}
			set
			{
				if ((this._EntityKeyFields != value))
				{
					this.OnEntityKeyFieldsChanging(value);
					this.SendPropertyChanging();
					this._EntityKeyFields = value;
					this.SendPropertyChanged("EntityKeyFields");
					this.OnEntityKeyFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfInserts", DbType="Int NOT NULL")]
		public int NumberOfInserts
		{
			get
			{
				return this._NumberOfInserts;
			}
			set
			{
				if ((this._NumberOfInserts != value))
				{
					this.OnNumberOfInsertsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfInserts = value;
					this.SendPropertyChanged("NumberOfInserts");
					this.OnNumberOfInsertsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUpdates", DbType="Int NOT NULL")]
		public int NumberOfUpdates
		{
			get
			{
				return this._NumberOfUpdates;
			}
			set
			{
				if ((this._NumberOfUpdates != value))
				{
					this.OnNumberOfUpdatesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfUpdates = value;
					this.SendPropertyChanged("NumberOfUpdates");
					this.OnNumberOfUpdatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDeletions", DbType="Int NOT NULL")]
		public int NumberOfDeletions
		{
			get
			{
				return this._NumberOfDeletions;
			}
			set
			{
				if ((this._NumberOfDeletions != value))
				{
					this.OnNumberOfDeletionsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDeletions = value;
					this.SendPropertyChanged("NumberOfDeletions");
					this.OnNumberOfDeletionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfErrors", DbType="Int NOT NULL")]
		public int NumberOfErrors
		{
			get
			{
				return this._NumberOfErrors;
			}
			set
			{
				if ((this._NumberOfErrors != value))
				{
					this.OnNumberOfErrorsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfErrors = value;
					this.SendPropertyChanged("NumberOfErrors");
					this.OnNumberOfErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityBatchHistory_EntityBatchHistoryDetail", Storage="_EntityBatchHistoryDetails", ThisKey="EntityBatchHistorylId", OtherKey="EntityBatchHistoryId")]
		public EntitySet<EntityBatchHistoryDetail> EntityBatchHistoryDetails
		{
			get
			{
				return this._EntityBatchHistoryDetails;
			}
			set
			{
				this._EntityBatchHistoryDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepHistory_EntityBatchHistory", Storage="_JobStepHistory", ThisKey="JobStepHistoryId", OtherKey="JobStepHistoryId", IsForeignKey=true)]
		public JobStepHistory JobStepHistory
		{
			get
			{
				return this._JobStepHistory.Entity;
			}
			set
			{
				JobStepHistory previousValue = this._JobStepHistory.Entity;
				if (((previousValue != value) 
							|| (this._JobStepHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobStepHistory.Entity = null;
						previousValue.EntityBatchHistories.Remove(this);
					}
					this._JobStepHistory.Entity = value;
					if ((value != null))
					{
						value.EntityBatchHistories.Add(this);
						this._JobStepHistoryId = value.JobStepHistoryId;
					}
					else
					{
						this._JobStepHistoryId = default(int);
					}
					this.SendPropertyChanged("JobStepHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityBatchHistoryDetails(EntityBatchHistoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.EntityBatchHistory = this;
		}
		
		private void detach_EntityBatchHistoryDetails(EntityBatchHistoryDetail entity)
		{
			this.SendPropertyChanging();
			entity.EntityBatchHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntityBatchHistoryDetail")]
	public partial class EntityBatchHistoryDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityBatchHistoryDetailId;
		
		private int _EntityBatchHistoryId;
		
		private string _EntityKeyValues;
		
		private char _Action;
		
		private string _FieldName;
		
		private string _FieldCaption;
		
		private string _OldValue;
		
		private string _NewValue;
		
		private EntityRef<EntityBatchHistory> _EntityBatchHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityBatchHistoryDetailIdChanging(int value);
    partial void OnEntityBatchHistoryDetailIdChanged();
    partial void OnEntityBatchHistoryIdChanging(int value);
    partial void OnEntityBatchHistoryIdChanged();
    partial void OnEntityKeyValuesChanging(string value);
    partial void OnEntityKeyValuesChanged();
    partial void OnActionChanging(char value);
    partial void OnActionChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldCaptionChanging(string value);
    partial void OnFieldCaptionChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    #endregion
		
		public EntityBatchHistoryDetail()
		{
			this._EntityBatchHistory = default(EntityRef<EntityBatchHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityBatchHistoryDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntityBatchHistoryDetailId
		{
			get
			{
				return this._EntityBatchHistoryDetailId;
			}
			set
			{
				if ((this._EntityBatchHistoryDetailId != value))
				{
					this.OnEntityBatchHistoryDetailIdChanging(value);
					this.SendPropertyChanging();
					this._EntityBatchHistoryDetailId = value;
					this.SendPropertyChanged("EntityBatchHistoryDetailId");
					this.OnEntityBatchHistoryDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityBatchHistoryId", DbType="Int NOT NULL")]
		public int EntityBatchHistoryId
		{
			get
			{
				return this._EntityBatchHistoryId;
			}
			set
			{
				if ((this._EntityBatchHistoryId != value))
				{
					if (this._EntityBatchHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntityBatchHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._EntityBatchHistoryId = value;
					this.SendPropertyChanged("EntityBatchHistoryId");
					this.OnEntityBatchHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKeyValues", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EntityKeyValues
		{
			get
			{
				return this._EntityKeyValues;
			}
			set
			{
				if ((this._EntityKeyValues != value))
				{
					this.OnEntityKeyValuesChanging(value);
					this.SendPropertyChanging();
					this._EntityKeyValues = value;
					this.SendPropertyChanged("EntityKeyValues");
					this.OnEntityKeyValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="Char(1) NOT NULL")]
		public char Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldCaption", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FieldCaption
		{
			get
			{
				return this._FieldCaption;
			}
			set
			{
				if ((this._FieldCaption != value))
				{
					this.OnFieldCaptionChanging(value);
					this.SendPropertyChanging();
					this._FieldCaption = value;
					this.SendPropertyChanged("FieldCaption");
					this.OnFieldCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(MAX)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(MAX)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntityBatchHistory_EntityBatchHistoryDetail", Storage="_EntityBatchHistory", ThisKey="EntityBatchHistoryId", OtherKey="EntityBatchHistorylId", IsForeignKey=true)]
		public EntityBatchHistory EntityBatchHistory
		{
			get
			{
				return this._EntityBatchHistory.Entity;
			}
			set
			{
				EntityBatchHistory previousValue = this._EntityBatchHistory.Entity;
				if (((previousValue != value) 
							|| (this._EntityBatchHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntityBatchHistory.Entity = null;
						previousValue.EntityBatchHistoryDetails.Remove(this);
					}
					this._EntityBatchHistory.Entity = value;
					if ((value != null))
					{
						value.EntityBatchHistoryDetails.Add(this);
						this._EntityBatchHistoryId = value.EntityBatchHistorylId;
					}
					else
					{
						this._EntityBatchHistoryId = default(int);
					}
					this.SendPropertyChanged("EntityBatchHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobDataSourceHistory")]
	public partial class JobDataSourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobDataSourceHistoryId;
		
		private int _JobHistoryId;
		
		private int _DataSourceId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.DateTime _ActualStartTime;
		
		private System.DateTime _ActualEndTime;
		
		private byte _JobDataSourceQueueStatusId;
		
		private bool _HasErrors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobDataSourceHistoryIdChanging(int value);
    partial void OnJobDataSourceHistoryIdChanged();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnDataSourceIdChanging(int value);
    partial void OnDataSourceIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnActualStartTimeChanging(System.DateTime value);
    partial void OnActualStartTimeChanged();
    partial void OnActualEndTimeChanging(System.DateTime value);
    partial void OnActualEndTimeChanged();
    partial void OnJobDataSourceQueueStatusIdChanging(byte value);
    partial void OnJobDataSourceQueueStatusIdChanged();
    partial void OnHasErrorsChanging(bool value);
    partial void OnHasErrorsChanged();
    #endregion
		
		public JobDataSourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDataSourceHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobDataSourceHistoryId
		{
			get
			{
				return this._JobDataSourceHistoryId;
			}
			set
			{
				if ((this._JobDataSourceHistoryId != value))
				{
					this.OnJobDataSourceHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobDataSourceHistoryId = value;
					this.SendPropertyChanged("JobDataSourceHistoryId");
					this.OnJobDataSourceHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", DbType="Int NOT NULL")]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceId", DbType="Int NOT NULL")]
		public int DataSourceId
		{
			get
			{
				return this._DataSourceId;
			}
			set
			{
				if ((this._DataSourceId != value))
				{
					this.OnDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DataSourceId = value;
					this.SendPropertyChanged("DataSourceId");
					this.OnDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDataSourceQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobDataSourceQueueStatusId
		{
			get
			{
				return this._JobDataSourceQueueStatusId;
			}
			set
			{
				if ((this._JobDataSourceQueueStatusId != value))
				{
					this.OnJobDataSourceQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobDataSourceQueueStatusId = value;
					this.SendPropertyChanged("JobDataSourceQueueStatusId");
					this.OnJobDataSourceQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasErrors", DbType="Bit NOT NULL")]
		public bool HasErrors
		{
			get
			{
				return this._HasErrors;
			}
			set
			{
				if ((this._HasErrors != value))
				{
					this.OnHasErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasErrors = value;
					this.SendPropertyChanged("HasErrors");
					this.OnHasErrorsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobHistory")]
	public partial class JobHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobHistoryId;
		
		private int _JobQueueId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private string _InvocationSource;
		
		private System.DateTime _ScheduledStartTime;
		
		private System.DateTime _ActualStartTime;
		
		private System.DateTime _ActualEndTime;
		
		private byte _JobQueueStatusId;
		
		private bool _HasErrors;
		
		private EntitySet<JobStepHistory> _JobStepHistories;
		
		private EntitySet<LogEntry> _LogEntries;
		
		private EntitySet<LogEntry> _LogEntries1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnJobQueueIdChanging(int value);
    partial void OnJobQueueIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnInvocationSourceChanging(string value);
    partial void OnInvocationSourceChanged();
    partial void OnScheduledStartTimeChanging(System.DateTime value);
    partial void OnScheduledStartTimeChanged();
    partial void OnActualStartTimeChanging(System.DateTime value);
    partial void OnActualStartTimeChanged();
    partial void OnActualEndTimeChanging(System.DateTime value);
    partial void OnActualEndTimeChanged();
    partial void OnJobQueueStatusIdChanging(byte value);
    partial void OnJobQueueStatusIdChanged();
    partial void OnHasErrorsChanging(bool value);
    partial void OnHasErrorsChanged();
    #endregion
		
		public JobHistory()
		{
			this._JobStepHistories = new EntitySet<JobStepHistory>(new Action<JobStepHistory>(this.attach_JobStepHistories), new Action<JobStepHistory>(this.detach_JobStepHistories));
			this._LogEntries = new EntitySet<LogEntry>(new Action<LogEntry>(this.attach_LogEntries), new Action<LogEntry>(this.detach_LogEntries));
			this._LogEntries1 = new EntitySet<LogEntry>(new Action<LogEntry>(this.attach_LogEntries1), new Action<LogEntry>(this.detach_LogEntries1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueId", DbType="Int NOT NULL")]
		public int JobQueueId
		{
			get
			{
				return this._JobQueueId;
			}
			set
			{
				if ((this._JobQueueId != value))
				{
					this.OnJobQueueIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueId = value;
					this.SendPropertyChanged("JobQueueId");
					this.OnJobQueueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvocationSource", DbType="NVarChar(50)")]
		public string InvocationSource
		{
			get
			{
				return this._InvocationSource;
			}
			set
			{
				if ((this._InvocationSource != value))
				{
					this.OnInvocationSourceChanging(value);
					this.SendPropertyChanging();
					this._InvocationSource = value;
					this.SendPropertyChanged("InvocationSource");
					this.OnInvocationSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledStartTime
		{
			get
			{
				return this._ScheduledStartTime;
			}
			set
			{
				if ((this._ScheduledStartTime != value))
				{
					this.OnScheduledStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledStartTime = value;
					this.SendPropertyChanged("ScheduledStartTime");
					this.OnScheduledStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobQueueStatusId
		{
			get
			{
				return this._JobQueueStatusId;
			}
			set
			{
				if ((this._JobQueueStatusId != value))
				{
					this.OnJobQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueStatusId = value;
					this.SendPropertyChanged("JobQueueStatusId");
					this.OnJobQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasErrors", DbType="Bit NOT NULL")]
		public bool HasErrors
		{
			get
			{
				return this._HasErrors;
			}
			set
			{
				if ((this._HasErrors != value))
				{
					this.OnHasErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasErrors = value;
					this.SendPropertyChanged("HasErrors");
					this.OnHasErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_JobStepHistory", Storage="_JobStepHistories", ThisKey="JobHistoryId", OtherKey="JobHistoryId")]
		public EntitySet<JobStepHistory> JobStepHistories
		{
			get
			{
				return this._JobStepHistories;
			}
			set
			{
				this._JobStepHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_LogEntry", Storage="_LogEntries", ThisKey="JobHistoryId", OtherKey="JobHistoryId")]
		public EntitySet<LogEntry> LogEntries
		{
			get
			{
				return this._LogEntries;
			}
			set
			{
				this._LogEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_LogEntry1", Storage="_LogEntries1", ThisKey="JobHistoryId", OtherKey="JobHistoryId")]
		public EntitySet<LogEntry> LogEntries1
		{
			get
			{
				return this._LogEntries1;
			}
			set
			{
				this._LogEntries1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = this;
		}
		
		private void detach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = null;
		}
		
		private void attach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = this;
		}
		
		private void detach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = null;
		}
		
		private void attach_LogEntries1(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory1 = this;
		}
		
		private void detach_LogEntries1(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobStepHistory")]
	public partial class JobStepHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobStepHistoryId;
		
		private int _JobHistoryId;
		
		private int _DataSourceId;
		
		private int _JobStepId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.DateTime _ActualStartTime;
		
		private System.DateTime _ActualEndTime;
		
		private byte _JobStepQueueStatusId;
		
		private bool _HasErrors;
		
		private EntitySet<EntityBatchHistory> _EntityBatchHistories;
		
		private EntitySet<LogEntry> _LogEntries;
		
		private EntityRef<JobHistory> _JobHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobStepHistoryIdChanging(int value);
    partial void OnJobStepHistoryIdChanged();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnDataSourceIdChanging(int value);
    partial void OnDataSourceIdChanged();
    partial void OnJobStepIdChanging(int value);
    partial void OnJobStepIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnActualStartTimeChanging(System.DateTime value);
    partial void OnActualStartTimeChanged();
    partial void OnActualEndTimeChanging(System.DateTime value);
    partial void OnActualEndTimeChanged();
    partial void OnJobStepQueueStatusIdChanging(byte value);
    partial void OnJobStepQueueStatusIdChanged();
    partial void OnHasErrorsChanging(bool value);
    partial void OnHasErrorsChanged();
    #endregion
		
		public JobStepHistory()
		{
			this._EntityBatchHistories = new EntitySet<EntityBatchHistory>(new Action<EntityBatchHistory>(this.attach_EntityBatchHistories), new Action<EntityBatchHistory>(this.detach_EntityBatchHistories));
			this._LogEntries = new EntitySet<LogEntry>(new Action<LogEntry>(this.attach_LogEntries), new Action<LogEntry>(this.detach_LogEntries));
			this._JobHistory = default(EntityRef<JobHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobStepHistoryId
		{
			get
			{
				return this._JobStepHistoryId;
			}
			set
			{
				if ((this._JobStepHistoryId != value))
				{
					this.OnJobStepHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepHistoryId = value;
					this.SendPropertyChanged("JobStepHistoryId");
					this.OnJobStepHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", DbType="Int NOT NULL")]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					if (this._JobHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceId", DbType="Int NOT NULL")]
		public int DataSourceId
		{
			get
			{
				return this._DataSourceId;
			}
			set
			{
				if ((this._DataSourceId != value))
				{
					this.OnDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DataSourceId = value;
					this.SendPropertyChanged("DataSourceId");
					this.OnDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepId", DbType="Int NOT NULL")]
		public int JobStepId
		{
			get
			{
				return this._JobStepId;
			}
			set
			{
				if ((this._JobStepId != value))
				{
					this.OnJobStepIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepId = value;
					this.SendPropertyChanged("JobStepId");
					this.OnJobStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobStepQueueStatusId
		{
			get
			{
				return this._JobStepQueueStatusId;
			}
			set
			{
				if ((this._JobStepQueueStatusId != value))
				{
					this.OnJobStepQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepQueueStatusId = value;
					this.SendPropertyChanged("JobStepQueueStatusId");
					this.OnJobStepQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasErrors", DbType="Bit NOT NULL")]
		public bool HasErrors
		{
			get
			{
				return this._HasErrors;
			}
			set
			{
				if ((this._HasErrors != value))
				{
					this.OnHasErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasErrors = value;
					this.SendPropertyChanged("HasErrors");
					this.OnHasErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepHistory_EntityBatchHistory", Storage="_EntityBatchHistories", ThisKey="JobStepHistoryId", OtherKey="JobStepHistoryId")]
		public EntitySet<EntityBatchHistory> EntityBatchHistories
		{
			get
			{
				return this._EntityBatchHistories;
			}
			set
			{
				this._EntityBatchHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepHistory_LogEntry", Storage="_LogEntries", ThisKey="JobStepHistoryId", OtherKey="JobStepHistoryId")]
		public EntitySet<LogEntry> LogEntries
		{
			get
			{
				return this._LogEntries;
			}
			set
			{
				this._LogEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_JobStepHistory", Storage="_JobHistory", ThisKey="JobHistoryId", OtherKey="JobHistoryId", IsForeignKey=true)]
		public JobHistory JobHistory
		{
			get
			{
				return this._JobHistory.Entity;
			}
			set
			{
				JobHistory previousValue = this._JobHistory.Entity;
				if (((previousValue != value) 
							|| (this._JobHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobHistory.Entity = null;
						previousValue.JobStepHistories.Remove(this);
					}
					this._JobHistory.Entity = value;
					if ((value != null))
					{
						value.JobStepHistories.Add(this);
						this._JobHistoryId = value.JobHistoryId;
					}
					else
					{
						this._JobHistoryId = default(int);
					}
					this.SendPropertyChanged("JobHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntityBatchHistories(EntityBatchHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobStepHistory = this;
		}
		
		private void detach_EntityBatchHistories(EntityBatchHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobStepHistory = null;
		}
		
		private void attach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobStepHistory = this;
		}
		
		private void detach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.JobStepHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogEntry")]
	public partial class LogEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogEntryId;
		
		private int _IntegrationId;
		
		private int _JobHistoryId;
		
		private int _JobDataSourceHistoryId;
		
		private int _JobStepHistoryId;
		
		private byte _LogEntryTypeId;
		
		private System.DateTime _CreatedDate;
		
		private string _EntityName;
		
		private string _EntityKeyFields;
		
		private string _EntityKeyValues;
		
		private string _RecordDescription;
		
		private string _Message;
		
		private string _Details;
		
		private EntityRef<JobHistory> _JobHistory;
		
		private EntityRef<JobHistory> _JobHistory1;
		
		private EntityRef<JobStepHistory> _JobStepHistory;
		
		private EntityRef<LogEntryType> _LogEntryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogEntryIdChanging(int value);
    partial void OnLogEntryIdChanged();
    partial void OnIntegrationIdChanging(int value);
    partial void OnIntegrationIdChanged();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnJobDataSourceHistoryIdChanging(int value);
    partial void OnJobDataSourceHistoryIdChanged();
    partial void OnJobStepHistoryIdChanging(int value);
    partial void OnJobStepHistoryIdChanged();
    partial void OnLogEntryTypeIdChanging(byte value);
    partial void OnLogEntryTypeIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEntityNameChanging(string value);
    partial void OnEntityNameChanged();
    partial void OnEntityKeyFieldsChanging(string value);
    partial void OnEntityKeyFieldsChanged();
    partial void OnEntityKeyValuesChanging(string value);
    partial void OnEntityKeyValuesChanged();
    partial void OnRecordDescriptionChanging(string value);
    partial void OnRecordDescriptionChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public LogEntry()
		{
			this._JobHistory = default(EntityRef<JobHistory>);
			this._JobHistory1 = default(EntityRef<JobHistory>);
			this._JobStepHistory = default(EntityRef<JobStepHistory>);
			this._LogEntryType = default(EntityRef<LogEntryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogEntryId
		{
			get
			{
				return this._LogEntryId;
			}
			set
			{
				if ((this._LogEntryId != value))
				{
					this.OnLogEntryIdChanging(value);
					this.SendPropertyChanging();
					this._LogEntryId = value;
					this.SendPropertyChanged("LogEntryId");
					this.OnLogEntryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="Int NOT NULL")]
		public int IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", DbType="Int NOT NULL")]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					if ((this._JobHistory.HasLoadedOrAssignedValue || this._JobHistory1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDataSourceHistoryId", DbType="Int NOT NULL")]
		public int JobDataSourceHistoryId
		{
			get
			{
				return this._JobDataSourceHistoryId;
			}
			set
			{
				if ((this._JobDataSourceHistoryId != value))
				{
					this.OnJobDataSourceHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobDataSourceHistoryId = value;
					this.SendPropertyChanged("JobDataSourceHistoryId");
					this.OnJobDataSourceHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepHistoryId", DbType="Int NOT NULL")]
		public int JobStepHistoryId
		{
			get
			{
				return this._JobStepHistoryId;
			}
			set
			{
				if ((this._JobStepHistoryId != value))
				{
					if (this._JobStepHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobStepHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepHistoryId = value;
					this.SendPropertyChanged("JobStepHistoryId");
					this.OnJobStepHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntryTypeId", DbType="TinyInt NOT NULL")]
		public byte LogEntryTypeId
		{
			get
			{
				return this._LogEntryTypeId;
			}
			set
			{
				if ((this._LogEntryTypeId != value))
				{
					if (this._LogEntryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogEntryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogEntryTypeId = value;
					this.SendPropertyChanged("LogEntryTypeId");
					this.OnLogEntryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityName", DbType="NVarChar(100)")]
		public string EntityName
		{
			get
			{
				return this._EntityName;
			}
			set
			{
				if ((this._EntityName != value))
				{
					this.OnEntityNameChanging(value);
					this.SendPropertyChanging();
					this._EntityName = value;
					this.SendPropertyChanged("EntityName");
					this.OnEntityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKeyFields", DbType="NVarChar(100)")]
		public string EntityKeyFields
		{
			get
			{
				return this._EntityKeyFields;
			}
			set
			{
				if ((this._EntityKeyFields != value))
				{
					this.OnEntityKeyFieldsChanging(value);
					this.SendPropertyChanging();
					this._EntityKeyFields = value;
					this.SendPropertyChanged("EntityKeyFields");
					this.OnEntityKeyFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityKeyValues", DbType="NVarChar(100)")]
		public string EntityKeyValues
		{
			get
			{
				return this._EntityKeyValues;
			}
			set
			{
				if ((this._EntityKeyValues != value))
				{
					this.OnEntityKeyValuesChanging(value);
					this.SendPropertyChanging();
					this._EntityKeyValues = value;
					this.SendPropertyChanged("EntityKeyValues");
					this.OnEntityKeyValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDescription", DbType="NVarChar(500)")]
		public string RecordDescription
		{
			get
			{
				return this._RecordDescription;
			}
			set
			{
				if ((this._RecordDescription != value))
				{
					this.OnRecordDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RecordDescription = value;
					this.SendPropertyChanged("RecordDescription");
					this.OnRecordDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_LogEntry", Storage="_JobHistory", ThisKey="JobHistoryId", OtherKey="JobHistoryId", IsForeignKey=true)]
		public JobHistory JobHistory
		{
			get
			{
				return this._JobHistory.Entity;
			}
			set
			{
				JobHistory previousValue = this._JobHistory.Entity;
				if (((previousValue != value) 
							|| (this._JobHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobHistory.Entity = null;
						previousValue.LogEntries.Remove(this);
					}
					this._JobHistory.Entity = value;
					if ((value != null))
					{
						value.LogEntries.Add(this);
						this._JobHistoryId = value.JobHistoryId;
					}
					else
					{
						this._JobHistoryId = default(int);
					}
					this.SendPropertyChanged("JobHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_LogEntry1", Storage="_JobHistory1", ThisKey="JobHistoryId", OtherKey="JobHistoryId", IsForeignKey=true)]
		public JobHistory JobHistory1
		{
			get
			{
				return this._JobHistory1.Entity;
			}
			set
			{
				JobHistory previousValue = this._JobHistory1.Entity;
				if (((previousValue != value) 
							|| (this._JobHistory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobHistory1.Entity = null;
						previousValue.LogEntries1.Remove(this);
					}
					this._JobHistory1.Entity = value;
					if ((value != null))
					{
						value.LogEntries1.Add(this);
						this._JobHistoryId = value.JobHistoryId;
					}
					else
					{
						this._JobHistoryId = default(int);
					}
					this.SendPropertyChanged("JobHistory1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepHistory_LogEntry", Storage="_JobStepHistory", ThisKey="JobStepHistoryId", OtherKey="JobStepHistoryId", IsForeignKey=true)]
		public JobStepHistory JobStepHistory
		{
			get
			{
				return this._JobStepHistory.Entity;
			}
			set
			{
				JobStepHistory previousValue = this._JobStepHistory.Entity;
				if (((previousValue != value) 
							|| (this._JobStepHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobStepHistory.Entity = null;
						previousValue.LogEntries.Remove(this);
					}
					this._JobStepHistory.Entity = value;
					if ((value != null))
					{
						value.LogEntries.Add(this);
						this._JobStepHistoryId = value.JobStepHistoryId;
					}
					else
					{
						this._JobStepHistoryId = default(int);
					}
					this.SendPropertyChanged("JobStepHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogEntryType_LogEntry", Storage="_LogEntryType", ThisKey="LogEntryTypeId", OtherKey="LogEntryTypeId", IsForeignKey=true)]
		public LogEntryType LogEntryType
		{
			get
			{
				return this._LogEntryType.Entity;
			}
			set
			{
				LogEntryType previousValue = this._LogEntryType.Entity;
				if (((previousValue != value) 
							|| (this._LogEntryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogEntryType.Entity = null;
						previousValue.LogEntries.Remove(this);
					}
					this._LogEntryType.Entity = value;
					if ((value != null))
					{
						value.LogEntries.Add(this);
						this._LogEntryTypeId = value.LogEntryTypeId;
					}
					else
					{
						this._LogEntryTypeId = default(byte);
					}
					this.SendPropertyChanged("LogEntryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogEntryType")]
	public partial class LogEntryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _LogEntryTypeId;
		
		private string _Name;
		
		private EntitySet<LogEntry> _LogEntries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogEntryTypeIdChanging(byte value);
    partial void OnLogEntryTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public LogEntryType()
		{
			this._LogEntries = new EntitySet<LogEntry>(new Action<LogEntry>(this.attach_LogEntries), new Action<LogEntry>(this.detach_LogEntries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEntryTypeId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte LogEntryTypeId
		{
			get
			{
				return this._LogEntryTypeId;
			}
			set
			{
				if ((this._LogEntryTypeId != value))
				{
					this.OnLogEntryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogEntryTypeId = value;
					this.SendPropertyChanged("LogEntryTypeId");
					this.OnLogEntryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogEntryType_LogEntry", Storage="_LogEntries", ThisKey="LogEntryTypeId", OtherKey="LogEntryTypeId")]
		public EntitySet<LogEntry> LogEntries
		{
			get
			{
				return this._LogEntries;
			}
			set
			{
				this._LogEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.LogEntryType = this;
		}
		
		private void detach_LogEntries(LogEntry entity)
		{
			this.SendPropertyChanging();
			entity.LogEntryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoggingLevel")]
	public partial class LoggingLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _LoggingLevelId;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoggingLevelIdChanging(byte value);
    partial void OnLoggingLevelIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LoggingLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingLevelId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte LoggingLevelId
		{
			get
			{
				return this._LoggingLevelId;
			}
			set
			{
				if ((this._LoggingLevelId != value))
				{
					this.OnLoggingLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LoggingLevelId = value;
					this.SendPropertyChanged("LoggingLevelId");
					this.OnLoggingLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
