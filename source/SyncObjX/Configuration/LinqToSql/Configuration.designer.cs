#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncObjX.Configuration.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SyncObjX")]
	public partial class ConfigurationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIntegration(Integration instance);
    partial void UpdateIntegration(Integration instance);
    partial void DeleteIntegration(Integration instance);
    partial void InsertJobPriority(JobPriority instance);
    partial void UpdateJobPriority(JobPriority instance);
    partial void DeleteJobPriority(JobPriority instance);
    partial void InsertJobStep(JobStep instance);
    partial void UpdateJobStep(JobStep instance);
    partial void DeleteJobStep(JobStep instance);
    partial void InsertServiceConfig(ServiceConfig instance);
    partial void UpdateServiceConfig(ServiceConfig instance);
    partial void DeleteServiceConfig(ServiceConfig instance);
    partial void InsertLoggingLevel(LoggingLevel instance);
    partial void UpdateLoggingLevel(LoggingLevel instance);
    partial void DeleteLoggingLevel(LoggingLevel instance);
    partial void InsertExtendedProperty(ExtendedProperty instance);
    partial void UpdateExtendedProperty(ExtendedProperty instance);
    partial void DeleteExtendedProperty(ExtendedProperty instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertJobSchedule(JobSchedule instance);
    partial void UpdateJobSchedule(JobSchedule instance);
    partial void DeleteJobSchedule(JobSchedule instance);
    partial void InsertJobDataSource(JobDataSource instance);
    partial void UpdateJobDataSource(JobDataSource instance);
    partial void DeleteJobDataSource(JobDataSource instance);
    partial void InsertDataSource(DataSource instance);
    partial void UpdateDataSource(DataSource instance);
    partial void DeleteDataSource(DataSource instance);
    partial void InsertAdapter(Adapter instance);
    partial void UpdateAdapter(Adapter instance);
    partial void DeleteAdapter(Adapter instance);
    partial void InsertSyncObjectType(SyncObjectType instance);
    partial void UpdateSyncObjectType(SyncObjectType instance);
    partial void DeleteSyncObjectType(SyncObjectType instance);
    partial void InsertJobDataSourceHistory(JobDataSourceHistory instance);
    partial void UpdateJobDataSourceHistory(JobDataSourceHistory instance);
    partial void DeleteJobDataSourceHistory(JobDataSourceHistory instance);
    #endregion
		
		public ConfigurationDataContext() : 
				base(global::SyncObjX.Properties.Settings.Default.SyncObjXConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConfigurationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConfigurationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConfigurationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConfigurationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Integration> Integrations
		{
			get
			{
				return this.GetTable<Integration>();
			}
		}
		
		public System.Data.Linq.Table<JobPriority> JobPriorities
		{
			get
			{
				return this.GetTable<JobPriority>();
			}
		}
		
		public System.Data.Linq.Table<JobStep> JobSteps
		{
			get
			{
				return this.GetTable<JobStep>();
			}
		}
		
		public System.Data.Linq.Table<ServiceConfig> ServiceConfigs
		{
			get
			{
				return this.GetTable<ServiceConfig>();
			}
		}
		
		public System.Data.Linq.Table<LoggingLevel> LoggingLevels
		{
			get
			{
				return this.GetTable<LoggingLevel>();
			}
		}
		
		public System.Data.Linq.Table<ExtendedProperty> ExtendedProperties
		{
			get
			{
				return this.GetTable<ExtendedProperty>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<JobSchedule> JobSchedules
		{
			get
			{
				return this.GetTable<JobSchedule>();
			}
		}
		
		public System.Data.Linq.Table<JobDataSource> JobDataSources
		{
			get
			{
				return this.GetTable<JobDataSource>();
			}
		}
		
		public System.Data.Linq.Table<DataSource> DataSources
		{
			get
			{
				return this.GetTable<DataSource>();
			}
		}
		
		public System.Data.Linq.Table<Adapter> Adapters
		{
			get
			{
				return this.GetTable<Adapter>();
			}
		}
		
		public System.Data.Linq.Table<SyncObjectType> SyncObjectTypes
		{
			get
			{
				return this.GetTable<SyncObjectType>();
			}
		}
		
		public System.Data.Linq.Table<JobDataSourceHistory> JobDataSourceHistories
		{
			get
			{
				return this.GetTable<JobDataSourceHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Integration")]
	public partial class Integration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IntegrationId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private string _PackageDllDirectory;
		
		private string _PackageDllFilename;
		
		private bool _IsEnabled;
		
		private string _SourceName;
		
		private string _TargetName;
		
		private int _MaxConcurrentThreads;
		
		private byte _LoggingLevelId;
		
		private bool _LogToDatabase;
		
		private int _DaysOfDatabaseLoggingHistory;
		
		private bool _LogToFile;
		
		private int _DaysOfFileLoggingHistory;
		
		private EntitySet<Job> _Jobs;
		
		private EntityRef<LoggingLevel> _LoggingLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntegrationIdChanging(System.Guid value);
    partial void OnIntegrationIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageDllDirectoryChanging(string value);
    partial void OnPackageDllDirectoryChanged();
    partial void OnPackageDllFilenameChanging(string value);
    partial void OnPackageDllFilenameChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnMaxConcurrentThreadsChanging(int value);
    partial void OnMaxConcurrentThreadsChanged();
    partial void OnLoggingLevelIdChanging(byte value);
    partial void OnLoggingLevelIdChanged();
    partial void OnLogToDatabaseChanging(bool value);
    partial void OnLogToDatabaseChanged();
    partial void OnDaysOfDatabaseLoggingHistoryChanging(int value);
    partial void OnDaysOfDatabaseLoggingHistoryChanged();
    partial void OnLogToFileChanging(bool value);
    partial void OnLogToFileChanged();
    partial void OnDaysOfFileLoggingHistoryChanging(int value);
    partial void OnDaysOfFileLoggingHistoryChanged();
    #endregion
		
		public Integration()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._LoggingLevel = default(EntityRef<LoggingLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageDllDirectory", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string PackageDllDirectory
		{
			get
			{
				return this._PackageDllDirectory;
			}
			set
			{
				if ((this._PackageDllDirectory != value))
				{
					this.OnPackageDllDirectoryChanging(value);
					this.SendPropertyChanging();
					this._PackageDllDirectory = value;
					this.SendPropertyChanged("PackageDllDirectory");
					this.OnPackageDllDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageDllFilename", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PackageDllFilename
		{
			get
			{
				return this._PackageDllFilename;
			}
			set
			{
				if ((this._PackageDllFilename != value))
				{
					this.OnPackageDllFilenameChanging(value);
					this.SendPropertyChanging();
					this._PackageDllFilename = value;
					this.SendPropertyChanged("PackageDllFilename");
					this.OnPackageDllFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TargetName
		{
			get
			{
				return this._TargetName;
			}
			set
			{
				if ((this._TargetName != value))
				{
					this.OnTargetNameChanging(value);
					this.SendPropertyChanging();
					this._TargetName = value;
					this.SendPropertyChanged("TargetName");
					this.OnTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxConcurrentThreads", DbType="Int NOT NULL")]
		public int MaxConcurrentThreads
		{
			get
			{
				return this._MaxConcurrentThreads;
			}
			set
			{
				if ((this._MaxConcurrentThreads != value))
				{
					this.OnMaxConcurrentThreadsChanging(value);
					this.SendPropertyChanging();
					this._MaxConcurrentThreads = value;
					this.SendPropertyChanged("MaxConcurrentThreads");
					this.OnMaxConcurrentThreadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingLevelId", DbType="TinyInt NOT NULL")]
		public byte LoggingLevelId
		{
			get
			{
				return this._LoggingLevelId;
			}
			set
			{
				if ((this._LoggingLevelId != value))
				{
					if (this._LoggingLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoggingLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LoggingLevelId = value;
					this.SendPropertyChanged("LoggingLevelId");
					this.OnLoggingLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogToDatabase", DbType="Bit NOT NULL")]
		public bool LogToDatabase
		{
			get
			{
				return this._LogToDatabase;
			}
			set
			{
				if ((this._LogToDatabase != value))
				{
					this.OnLogToDatabaseChanging(value);
					this.SendPropertyChanging();
					this._LogToDatabase = value;
					this.SendPropertyChanged("LogToDatabase");
					this.OnLogToDatabaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfDatabaseLoggingHistory", DbType="Int NOT NULL")]
		public int DaysOfDatabaseLoggingHistory
		{
			get
			{
				return this._DaysOfDatabaseLoggingHistory;
			}
			set
			{
				if ((this._DaysOfDatabaseLoggingHistory != value))
				{
					this.OnDaysOfDatabaseLoggingHistoryChanging(value);
					this.SendPropertyChanging();
					this._DaysOfDatabaseLoggingHistory = value;
					this.SendPropertyChanged("DaysOfDatabaseLoggingHistory");
					this.OnDaysOfDatabaseLoggingHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogToFile", DbType="Bit NOT NULL")]
		public bool LogToFile
		{
			get
			{
				return this._LogToFile;
			}
			set
			{
				if ((this._LogToFile != value))
				{
					this.OnLogToFileChanging(value);
					this.SendPropertyChanging();
					this._LogToFile = value;
					this.SendPropertyChanged("LogToFile");
					this.OnLogToFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfFileLoggingHistory", DbType="Int NOT NULL")]
		public int DaysOfFileLoggingHistory
		{
			get
			{
				return this._DaysOfFileLoggingHistory;
			}
			set
			{
				if ((this._DaysOfFileLoggingHistory != value))
				{
					this.OnDaysOfFileLoggingHistoryChanging(value);
					this.SendPropertyChanging();
					this._DaysOfFileLoggingHistory = value;
					this.SendPropertyChanged("DaysOfFileLoggingHistory");
					this.OnDaysOfFileLoggingHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Integration_Job", Storage="_Jobs", ThisKey="IntegrationId", OtherKey="IntegrationId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoggingLevel_Integration", Storage="_LoggingLevel", ThisKey="LoggingLevelId", OtherKey="LoggingLevelId", IsForeignKey=true)]
		public LoggingLevel LoggingLevel
		{
			get
			{
				return this._LoggingLevel.Entity;
			}
			set
			{
				LoggingLevel previousValue = this._LoggingLevel.Entity;
				if (((previousValue != value) 
							|| (this._LoggingLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoggingLevel.Entity = null;
						previousValue.Integrations.Remove(this);
					}
					this._LoggingLevel.Entity = value;
					if ((value != null))
					{
						value.Integrations.Add(this);
						this._LoggingLevelId = value.LoggingLevelId;
					}
					else
					{
						this._LoggingLevelId = default(byte);
					}
					this.SendPropertyChanged("LoggingLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Integration = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Integration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobPriority")]
	public partial class JobPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _JobPriorityId;
		
		private string _Name;
		
		private System.Nullable<int> _MaxDelayedStartInSeconds;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobPriorityIdChanging(byte value);
    partial void OnJobPriorityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMaxDelayedStartInSecondsChanging(System.Nullable<int> value);
    partial void OnMaxDelayedStartInSecondsChanged();
    #endregion
		
		public JobPriority()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPriorityId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte JobPriorityId
		{
			get
			{
				return this._JobPriorityId;
			}
			set
			{
				if ((this._JobPriorityId != value))
				{
					this.OnJobPriorityIdChanging(value);
					this.SendPropertyChanging();
					this._JobPriorityId = value;
					this.SendPropertyChanged("JobPriorityId");
					this.OnJobPriorityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDelayedStartInSeconds", DbType="Int")]
		public System.Nullable<int> MaxDelayedStartInSeconds
		{
			get
			{
				return this._MaxDelayedStartInSeconds;
			}
			set
			{
				if ((this._MaxDelayedStartInSeconds != value))
				{
					this.OnMaxDelayedStartInSecondsChanging(value);
					this.SendPropertyChanging();
					this._MaxDelayedStartInSeconds = value;
					this.SendPropertyChanged("MaxDelayedStartInSeconds");
					this.OnMaxDelayedStartInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobPriority_Job", Storage="_Jobs", ThisKey="JobPriorityId", OtherKey="JobPriorityId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobPriority = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobPriority = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobStep")]
	public partial class JobStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobStepId;
		
		private System.Guid _JobId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private string _FullyQualifiedName;
		
		private byte _OrderIndex;
		
		private bool _IsEnabled;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobStepIdChanging(System.Guid value);
    partial void OnJobStepIdChanged();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFullyQualifiedNameChanging(string value);
    partial void OnFullyQualifiedNameChanged();
    partial void OnOrderIndexChanging(byte value);
    partial void OnOrderIndexChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    #endregion
		
		public JobStep()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobStepId
		{
			get
			{
				return this._JobStepId;
			}
			set
			{
				if ((this._JobStepId != value))
				{
					this.OnJobStepIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepId = value;
					this.SendPropertyChanged("JobStepId");
					this.OnJobStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullyQualifiedName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullyQualifiedName
		{
			get
			{
				return this._FullyQualifiedName;
			}
			set
			{
				if ((this._FullyQualifiedName != value))
				{
					this.OnFullyQualifiedNameChanging(value);
					this.SendPropertyChanging();
					this._FullyQualifiedName = value;
					this.SendPropertyChanged("FullyQualifiedName");
					this.OnFullyQualifiedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="TinyInt NOT NULL")]
		public byte OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobStep", Storage="_Job", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.JobSteps.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.JobSteps.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceConfig")]
	public partial class ServiceConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PropertyKey;
		
		private string _PropertyValue;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyKeyChanging(string value);
    partial void OnPropertyKeyChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ServiceConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyKey", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PropertyKey
		{
			get
			{
				return this._PropertyKey;
			}
			set
			{
				if ((this._PropertyKey != value))
				{
					this.OnPropertyKeyChanging(value);
					this.SendPropertyChanging();
					this._PropertyKey = value;
					this.SendPropertyChanged("PropertyKey");
					this.OnPropertyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="VarChar(MAX)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoggingLevel")]
	public partial class LoggingLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _LoggingLevelId;
		
		private string _Description;
		
		private EntitySet<Integration> _Integrations;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoggingLevelIdChanging(byte value);
    partial void OnLoggingLevelIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LoggingLevel()
		{
			this._Integrations = new EntitySet<Integration>(new Action<Integration>(this.attach_Integrations), new Action<Integration>(this.detach_Integrations));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingLevelId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte LoggingLevelId
		{
			get
			{
				return this._LoggingLevelId;
			}
			set
			{
				if ((this._LoggingLevelId != value))
				{
					this.OnLoggingLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LoggingLevelId = value;
					this.SendPropertyChanged("LoggingLevelId");
					this.OnLoggingLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoggingLevel_Integration", Storage="_Integrations", ThisKey="LoggingLevelId", OtherKey="LoggingLevelId")]
		public EntitySet<Integration> Integrations
		{
			get
			{
				return this._Integrations;
			}
			set
			{
				this._Integrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoggingLevel_Job", Storage="_Jobs", ThisKey="LoggingLevelId", OtherKey="LoggingLevelId")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Integrations(Integration entity)
		{
			this.SendPropertyChanging();
			entity.LoggingLevel = this;
		}
		
		private void detach_Integrations(Integration entity)
		{
			this.SendPropertyChanging();
			entity.LoggingLevel = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.LoggingLevel = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.LoggingLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtendedProperty")]
	public partial class ExtendedProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtendedPropertyId;
		
		private byte _SyncObjectTypeId;
		
		private System.Guid _SyncObjectId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Key;
		
		private string _Value;
		
		private EntityRef<SyncObjectType> _SyncObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtendedPropertyIdChanging(int value);
    partial void OnExtendedPropertyIdChanged();
    partial void OnSyncObjectTypeIdChanging(byte value);
    partial void OnSyncObjectTypeIdChanged();
    partial void OnSyncObjectIdChanging(System.Guid value);
    partial void OnSyncObjectIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ExtendedProperty()
		{
			this._SyncObjectType = default(EntityRef<SyncObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedPropertyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtendedPropertyId
		{
			get
			{
				return this._ExtendedPropertyId;
			}
			set
			{
				if ((this._ExtendedPropertyId != value))
				{
					this.OnExtendedPropertyIdChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPropertyId = value;
					this.SendPropertyChanged("ExtendedPropertyId");
					this.OnExtendedPropertyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncObjectTypeId", DbType="TinyInt NOT NULL")]
		public byte SyncObjectTypeId
		{
			get
			{
				return this._SyncObjectTypeId;
			}
			set
			{
				if ((this._SyncObjectTypeId != value))
				{
					if (this._SyncObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSyncObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SyncObjectTypeId = value;
					this.SendPropertyChanged("SyncObjectTypeId");
					this.OnSyncObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncObjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SyncObjectId
		{
			get
			{
				return this._SyncObjectId;
			}
			set
			{
				if ((this._SyncObjectId != value))
				{
					this.OnSyncObjectIdChanging(value);
					this.SendPropertyChanging();
					this._SyncObjectId = value;
					this.SendPropertyChanged("SyncObjectId");
					this.OnSyncObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncObjectType_ExtendedProperty", Storage="_SyncObjectType", ThisKey="SyncObjectTypeId", OtherKey="SyncObjectTypeId", IsForeignKey=true)]
		public SyncObjectType SyncObjectType
		{
			get
			{
				return this._SyncObjectType.Entity;
			}
			set
			{
				SyncObjectType previousValue = this._SyncObjectType.Entity;
				if (((previousValue != value) 
							|| (this._SyncObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SyncObjectType.Entity = null;
						previousValue.ExtendedProperties.Remove(this);
					}
					this._SyncObjectType.Entity = value;
					if ((value != null))
					{
						value.ExtendedProperties.Add(this);
						this._SyncObjectTypeId = value.SyncObjectTypeId;
					}
					else
					{
						this._SyncObjectTypeId = default(byte);
					}
					this.SendPropertyChanged("SyncObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobId;
		
		private System.Guid _IntegrationId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsEnabled;
		
		private byte _JobPriorityId;
		
		private byte _TerminateOnErrorTypeId;
		
		private byte _LoggingLevelId;
		
		private EntitySet<JobStep> _JobSteps;
		
		private EntitySet<JobSchedule> _JobSchedules;
		
		private EntitySet<JobDataSource> _JobDataSources;
		
		private EntityRef<Integration> _Integration;
		
		private EntityRef<JobPriority> _JobPriority;
		
		private EntityRef<LoggingLevel> _LoggingLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnIntegrationIdChanging(System.Guid value);
    partial void OnIntegrationIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnJobPriorityIdChanging(byte value);
    partial void OnJobPriorityIdChanged();
    partial void OnTerminateOnErrorTypeIdChanging(byte value);
    partial void OnTerminateOnErrorTypeIdChanged();
    partial void OnLoggingLevelIdChanging(byte value);
    partial void OnLoggingLevelIdChanged();
    #endregion
		
		public Job()
		{
			this._JobSteps = new EntitySet<JobStep>(new Action<JobStep>(this.attach_JobSteps), new Action<JobStep>(this.detach_JobSteps));
			this._JobSchedules = new EntitySet<JobSchedule>(new Action<JobSchedule>(this.attach_JobSchedules), new Action<JobSchedule>(this.detach_JobSchedules));
			this._JobDataSources = new EntitySet<JobDataSource>(new Action<JobDataSource>(this.attach_JobDataSources), new Action<JobDataSource>(this.detach_JobDataSources));
			this._Integration = default(EntityRef<Integration>);
			this._JobPriority = default(EntityRef<JobPriority>);
			this._LoggingLevel = default(EntityRef<LoggingLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegrationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IntegrationId
		{
			get
			{
				return this._IntegrationId;
			}
			set
			{
				if ((this._IntegrationId != value))
				{
					if (this._Integration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntegrationIdChanging(value);
					this.SendPropertyChanging();
					this._IntegrationId = value;
					this.SendPropertyChanged("IntegrationId");
					this.OnIntegrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobPriorityId", DbType="TinyInt NOT NULL")]
		public byte JobPriorityId
		{
			get
			{
				return this._JobPriorityId;
			}
			set
			{
				if ((this._JobPriorityId != value))
				{
					if (this._JobPriority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobPriorityIdChanging(value);
					this.SendPropertyChanging();
					this._JobPriorityId = value;
					this.SendPropertyChanged("JobPriorityId");
					this.OnJobPriorityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminateOnErrorTypeId", DbType="TinyInt NOT NULL")]
		public byte TerminateOnErrorTypeId
		{
			get
			{
				return this._TerminateOnErrorTypeId;
			}
			set
			{
				if ((this._TerminateOnErrorTypeId != value))
				{
					this.OnTerminateOnErrorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TerminateOnErrorTypeId = value;
					this.SendPropertyChanged("TerminateOnErrorTypeId");
					this.OnTerminateOnErrorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggingLevelId", DbType="TinyInt NOT NULL")]
		public byte LoggingLevelId
		{
			get
			{
				return this._LoggingLevelId;
			}
			set
			{
				if ((this._LoggingLevelId != value))
				{
					if (this._LoggingLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoggingLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LoggingLevelId = value;
					this.SendPropertyChanged("LoggingLevelId");
					this.OnLoggingLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobStep", Storage="_JobSteps", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<JobStep> JobSteps
		{
			get
			{
				return this._JobSteps;
			}
			set
			{
				this._JobSteps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobSchedule", Storage="_JobSchedules", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<JobSchedule> JobSchedules
		{
			get
			{
				return this._JobSchedules;
			}
			set
			{
				this._JobSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobDataSource", Storage="_JobDataSources", ThisKey="JobId", OtherKey="JobId")]
		public EntitySet<JobDataSource> JobDataSources
		{
			get
			{
				return this._JobDataSources;
			}
			set
			{
				this._JobDataSources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Integration_Job", Storage="_Integration", ThisKey="IntegrationId", OtherKey="IntegrationId", IsForeignKey=true)]
		public Integration Integration
		{
			get
			{
				return this._Integration.Entity;
			}
			set
			{
				Integration previousValue = this._Integration.Entity;
				if (((previousValue != value) 
							|| (this._Integration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Integration.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Integration.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._IntegrationId = value.IntegrationId;
					}
					else
					{
						this._IntegrationId = default(System.Guid);
					}
					this.SendPropertyChanged("Integration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobPriority_Job", Storage="_JobPriority", ThisKey="JobPriorityId", OtherKey="JobPriorityId", IsForeignKey=true)]
		public JobPriority JobPriority
		{
			get
			{
				return this._JobPriority.Entity;
			}
			set
			{
				JobPriority previousValue = this._JobPriority.Entity;
				if (((previousValue != value) 
							|| (this._JobPriority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobPriority.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._JobPriority.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._JobPriorityId = value.JobPriorityId;
					}
					else
					{
						this._JobPriorityId = default(byte);
					}
					this.SendPropertyChanged("JobPriority");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoggingLevel_Job", Storage="_LoggingLevel", ThisKey="LoggingLevelId", OtherKey="LoggingLevelId", IsForeignKey=true)]
		public LoggingLevel LoggingLevel
		{
			get
			{
				return this._LoggingLevel.Entity;
			}
			set
			{
				LoggingLevel previousValue = this._LoggingLevel.Entity;
				if (((previousValue != value) 
							|| (this._LoggingLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoggingLevel.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._LoggingLevel.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._LoggingLevelId = value.LoggingLevelId;
					}
					else
					{
						this._LoggingLevelId = default(byte);
					}
					this.SendPropertyChanged("LoggingLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobSteps(JobStep entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_JobSteps(JobStep entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_JobSchedules(JobSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_JobSchedules(JobSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_JobDataSources(JobDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_JobDataSources(JobDataSource entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobSchedule")]
	public partial class JobSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobScheduleId;
		
		private System.Guid _JobId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private bool _IsEnabled;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _DaysOfWeek;
		
		private System.TimeSpan _StartTime;
		
		private System.TimeSpan _EndTime;
		
		private int _FrequencyInSeconds;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobScheduleIdChanging(System.Guid value);
    partial void OnJobScheduleIdChanged();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDaysOfWeekChanging(string value);
    partial void OnDaysOfWeekChanged();
    partial void OnStartTimeChanging(System.TimeSpan value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.TimeSpan value);
    partial void OnEndTimeChanged();
    partial void OnFrequencyInSecondsChanging(int value);
    partial void OnFrequencyInSecondsChanged();
    #endregion
		
		public JobSchedule()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobScheduleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobScheduleId
		{
			get
			{
				return this._JobScheduleId;
			}
			set
			{
				if ((this._JobScheduleId != value))
				{
					this.OnJobScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._JobScheduleId = value;
					this.SendPropertyChanged("JobScheduleId");
					this.OnJobScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfWeek", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string DaysOfWeek
		{
			get
			{
				return this._DaysOfWeek;
			}
			set
			{
				if ((this._DaysOfWeek != value))
				{
					this.OnDaysOfWeekChanging(value);
					this.SendPropertyChanging();
					this._DaysOfWeek = value;
					this.SendPropertyChanged("DaysOfWeek");
					this.OnDaysOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Time NOT NULL")]
		public System.TimeSpan StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="Time NOT NULL")]
		public System.TimeSpan EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrequencyInSeconds", DbType="Int NOT NULL")]
		public int FrequencyInSeconds
		{
			get
			{
				return this._FrequencyInSeconds;
			}
			set
			{
				if ((this._FrequencyInSeconds != value))
				{
					this.OnFrequencyInSecondsChanging(value);
					this.SendPropertyChanging();
					this._FrequencyInSeconds = value;
					this.SendPropertyChanged("FrequencyInSeconds");
					this.OnFrequencyInSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobSchedule", Storage="_Job", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.JobSchedules.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.JobSchedules.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobDataSource")]
	public partial class JobDataSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobDataSourceId;
		
		private System.Guid _JobId;
		
		private System.Guid _DataSourceId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _SyncSide;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<DataSource> _DataSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobDataSourceIdChanging(System.Guid value);
    partial void OnJobDataSourceIdChanged();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnDataSourceIdChanging(System.Guid value);
    partial void OnDataSourceIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnSyncSideChanging(string value);
    partial void OnSyncSideChanged();
    #endregion
		
		public JobDataSource()
		{
			this._Job = default(EntityRef<Job>);
			this._DataSource = default(EntityRef<DataSource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobDataSourceId
		{
			get
			{
				return this._JobDataSourceId;
			}
			set
			{
				if ((this._JobDataSourceId != value))
				{
					this.OnJobDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._JobDataSourceId = value;
					this.SendPropertyChanged("JobDataSourceId");
					this.OnJobDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DataSourceId
		{
			get
			{
				return this._DataSourceId;
			}
			set
			{
				if ((this._DataSourceId != value))
				{
					if (this._DataSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DataSourceId = value;
					this.SendPropertyChanged("DataSourceId");
					this.OnDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncSide", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string SyncSide
		{
			get
			{
				return this._SyncSide;
			}
			set
			{
				if ((this._SyncSide != value))
				{
					this.OnSyncSideChanging(value);
					this.SendPropertyChanging();
					this._SyncSide = value;
					this.SendPropertyChanged("SyncSide");
					this.OnSyncSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobDataSource", Storage="_Job", ThisKey="JobId", OtherKey="JobId", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.JobDataSources.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.JobDataSources.Add(this);
						this._JobId = value.JobId;
					}
					else
					{
						this._JobId = default(System.Guid);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSource_JobDataSource", Storage="_DataSource", ThisKey="DataSourceId", OtherKey="DataSourceId", IsForeignKey=true)]
		public DataSource DataSource
		{
			get
			{
				return this._DataSource.Entity;
			}
			set
			{
				DataSource previousValue = this._DataSource.Entity;
				if (((previousValue != value) 
							|| (this._DataSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataSource.Entity = null;
						previousValue.JobDataSources.Remove(this);
					}
					this._DataSource.Entity = value;
					if ((value != null))
					{
						value.JobDataSources.Add(this);
						this._DataSourceId = value.DataSourceId;
					}
					else
					{
						this._DataSourceId = default(System.Guid);
					}
					this.SendPropertyChanged("DataSource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataSource")]
	public partial class DataSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DataSourceId;
		
		private System.Guid _AdapterId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<JobDataSource> _JobDataSources;
		
		private EntityRef<Adapter> _Adapter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataSourceIdChanging(System.Guid value);
    partial void OnDataSourceIdChanged();
    partial void OnAdapterIdChanging(System.Guid value);
    partial void OnAdapterIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DataSource()
		{
			this._JobDataSources = new EntitySet<JobDataSource>(new Action<JobDataSource>(this.attach_JobDataSources), new Action<JobDataSource>(this.detach_JobDataSources));
			this._Adapter = default(EntityRef<Adapter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DataSourceId
		{
			get
			{
				return this._DataSourceId;
			}
			set
			{
				if ((this._DataSourceId != value))
				{
					this.OnDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DataSourceId = value;
					this.SendPropertyChanged("DataSourceId");
					this.OnDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdapterId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AdapterId
		{
			get
			{
				return this._AdapterId;
			}
			set
			{
				if ((this._AdapterId != value))
				{
					if (this._Adapter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdapterIdChanging(value);
					this.SendPropertyChanging();
					this._AdapterId = value;
					this.SendPropertyChanged("AdapterId");
					this.OnAdapterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSource_JobDataSource", Storage="_JobDataSources", ThisKey="DataSourceId", OtherKey="DataSourceId")]
		public EntitySet<JobDataSource> JobDataSources
		{
			get
			{
				return this._JobDataSources;
			}
			set
			{
				this._JobDataSources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adapter_DataSource", Storage="_Adapter", ThisKey="AdapterId", OtherKey="AdapterId", IsForeignKey=true)]
		public Adapter Adapter
		{
			get
			{
				return this._Adapter.Entity;
			}
			set
			{
				Adapter previousValue = this._Adapter.Entity;
				if (((previousValue != value) 
							|| (this._Adapter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adapter.Entity = null;
						previousValue.DataSources.Remove(this);
					}
					this._Adapter.Entity = value;
					if ((value != null))
					{
						value.DataSources.Add(this);
						this._AdapterId = value.AdapterId;
					}
					else
					{
						this._AdapterId = default(System.Guid);
					}
					this.SendPropertyChanged("Adapter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobDataSources(JobDataSource entity)
		{
			this.SendPropertyChanging();
			entity.DataSource = this;
		}
		
		private void detach_JobDataSources(JobDataSource entity)
		{
			this.SendPropertyChanging();
			entity.DataSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adapter")]
	public partial class Adapter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AdapterId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private bool _IsDeleted;
		
		private string _Name;
		
		private string _Description;
		
		private string _DllDirectory;
		
		private string _DllFilename;
		
		private string _FullyQualifiedName;
		
		private EntitySet<DataSource> _DataSources;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdapterIdChanging(System.Guid value);
    partial void OnAdapterIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDllDirectoryChanging(string value);
    partial void OnDllDirectoryChanged();
    partial void OnDllFilenameChanging(string value);
    partial void OnDllFilenameChanged();
    partial void OnFullyQualifiedNameChanging(string value);
    partial void OnFullyQualifiedNameChanged();
    #endregion
		
		public Adapter()
		{
			this._DataSources = new EntitySet<DataSource>(new Action<DataSource>(this.attach_DataSources), new Action<DataSource>(this.detach_DataSources));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdapterId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AdapterId
		{
			get
			{
				return this._AdapterId;
			}
			set
			{
				if ((this._AdapterId != value))
				{
					this.OnAdapterIdChanging(value);
					this.SendPropertyChanging();
					this._AdapterId = value;
					this.SendPropertyChanged("AdapterId");
					this.OnAdapterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DllDirectory", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DllDirectory
		{
			get
			{
				return this._DllDirectory;
			}
			set
			{
				if ((this._DllDirectory != value))
				{
					this.OnDllDirectoryChanging(value);
					this.SendPropertyChanging();
					this._DllDirectory = value;
					this.SendPropertyChanged("DllDirectory");
					this.OnDllDirectoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DllFilename", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DllFilename
		{
			get
			{
				return this._DllFilename;
			}
			set
			{
				if ((this._DllFilename != value))
				{
					this.OnDllFilenameChanging(value);
					this.SendPropertyChanging();
					this._DllFilename = value;
					this.SendPropertyChanged("DllFilename");
					this.OnDllFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullyQualifiedName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string FullyQualifiedName
		{
			get
			{
				return this._FullyQualifiedName;
			}
			set
			{
				if ((this._FullyQualifiedName != value))
				{
					this.OnFullyQualifiedNameChanging(value);
					this.SendPropertyChanging();
					this._FullyQualifiedName = value;
					this.SendPropertyChanged("FullyQualifiedName");
					this.OnFullyQualifiedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adapter_DataSource", Storage="_DataSources", ThisKey="AdapterId", OtherKey="AdapterId")]
		public EntitySet<DataSource> DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				this._DataSources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DataSources(DataSource entity)
		{
			this.SendPropertyChanging();
			entity.Adapter = this;
		}
		
		private void detach_DataSources(DataSource entity)
		{
			this.SendPropertyChanging();
			entity.Adapter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SyncObjectType")]
	public partial class SyncObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _SyncObjectTypeId;
		
		private string _Name;
		
		private EntitySet<ExtendedProperty> _ExtendedProperties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSyncObjectTypeIdChanging(byte value);
    partial void OnSyncObjectTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public SyncObjectType()
		{
			this._ExtendedProperties = new EntitySet<ExtendedProperty>(new Action<ExtendedProperty>(this.attach_ExtendedProperties), new Action<ExtendedProperty>(this.detach_ExtendedProperties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncObjectTypeId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte SyncObjectTypeId
		{
			get
			{
				return this._SyncObjectTypeId;
			}
			set
			{
				if ((this._SyncObjectTypeId != value))
				{
					this.OnSyncObjectTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SyncObjectTypeId = value;
					this.SendPropertyChanged("SyncObjectTypeId");
					this.OnSyncObjectTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SyncObjectType_ExtendedProperty", Storage="_ExtendedProperties", ThisKey="SyncObjectTypeId", OtherKey="SyncObjectTypeId")]
		public EntitySet<ExtendedProperty> ExtendedProperties
		{
			get
			{
				return this._ExtendedProperties;
			}
			set
			{
				this._ExtendedProperties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtendedProperties(ExtendedProperty entity)
		{
			this.SendPropertyChanging();
			entity.SyncObjectType = this;
		}
		
		private void detach_ExtendedProperties(ExtendedProperty entity)
		{
			this.SendPropertyChanging();
			entity.SyncObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobDataSourceHistory")]
	public partial class JobDataSourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobId;
		
		private System.Guid _SourceDataSourceId;
		
		private System.Guid _TargetDataSourceId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.Guid _LastQueueRequestId;
		
		private System.Guid _LastJobInstanceId;
		
		private System.DateTime _LastStartTime;
		
		private System.DateTime _LastEndTime;
		
		private System.Nullable<System.DateTime> _LastStartTimeWithoutRecordErrors;
		
		private System.Nullable<System.DateTime> _LastEndTimeWithoutRecordErrors;
		
		private System.Nullable<System.DateTime> _LastStartTimeWithoutRuntimeErrors;
		
		private System.Nullable<System.DateTime> _LastEndTimeWithoutRuntimeErrors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnSourceDataSourceIdChanging(System.Guid value);
    partial void OnSourceDataSourceIdChanged();
    partial void OnTargetDataSourceIdChanging(System.Guid value);
    partial void OnTargetDataSourceIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnLastQueueRequestIdChanging(System.Guid value);
    partial void OnLastQueueRequestIdChanged();
    partial void OnLastJobInstanceIdChanging(System.Guid value);
    partial void OnLastJobInstanceIdChanged();
    partial void OnLastStartTimeChanging(System.DateTime value);
    partial void OnLastStartTimeChanged();
    partial void OnLastEndTimeChanging(System.DateTime value);
    partial void OnLastEndTimeChanged();
    partial void OnLastStartTimeWithoutRecordErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStartTimeWithoutRecordErrorsChanged();
    partial void OnLastEndTimeWithoutRecordErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEndTimeWithoutRecordErrorsChanged();
    partial void OnLastStartTimeWithoutRuntimeErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStartTimeWithoutRuntimeErrorsChanged();
    partial void OnLastEndTimeWithoutRuntimeErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEndTimeWithoutRuntimeErrorsChanged();
    #endregion
		
		public JobDataSourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SourceDataSourceId
		{
			get
			{
				return this._SourceDataSourceId;
			}
			set
			{
				if ((this._SourceDataSourceId != value))
				{
					this.OnSourceDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceDataSourceId = value;
					this.SendPropertyChanged("SourceDataSourceId");
					this.OnSourceDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TargetDataSourceId
		{
			get
			{
				return this._TargetDataSourceId;
			}
			set
			{
				if ((this._TargetDataSourceId != value))
				{
					this.OnTargetDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDataSourceId = value;
					this.SendPropertyChanged("TargetDataSourceId");
					this.OnTargetDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastQueueRequestId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LastQueueRequestId
		{
			get
			{
				return this._LastQueueRequestId;
			}
			set
			{
				if ((this._LastQueueRequestId != value))
				{
					this.OnLastQueueRequestIdChanging(value);
					this.SendPropertyChanging();
					this._LastQueueRequestId = value;
					this.SendPropertyChanged("LastQueueRequestId");
					this.OnLastQueueRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastJobInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LastJobInstanceId
		{
			get
			{
				return this._LastJobInstanceId;
			}
			set
			{
				if ((this._LastJobInstanceId != value))
				{
					this.OnLastJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._LastJobInstanceId = value;
					this.SendPropertyChanged("LastJobInstanceId");
					this.OnLastJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastStartTime
		{
			get
			{
				return this._LastStartTime;
			}
			set
			{
				if ((this._LastStartTime != value))
				{
					this.OnLastStartTimeChanging(value);
					this.SendPropertyChanging();
					this._LastStartTime = value;
					this.SendPropertyChanged("LastStartTime");
					this.OnLastStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastEndTime
		{
			get
			{
				return this._LastEndTime;
			}
			set
			{
				if ((this._LastEndTime != value))
				{
					this.OnLastEndTimeChanging(value);
					this.SendPropertyChanging();
					this._LastEndTime = value;
					this.SendPropertyChanged("LastEndTime");
					this.OnLastEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTimeWithoutRecordErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStartTimeWithoutRecordErrors
		{
			get
			{
				return this._LastStartTimeWithoutRecordErrors;
			}
			set
			{
				if ((this._LastStartTimeWithoutRecordErrors != value))
				{
					this.OnLastStartTimeWithoutRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastStartTimeWithoutRecordErrors = value;
					this.SendPropertyChanged("LastStartTimeWithoutRecordErrors");
					this.OnLastStartTimeWithoutRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTimeWithoutRecordErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEndTimeWithoutRecordErrors
		{
			get
			{
				return this._LastEndTimeWithoutRecordErrors;
			}
			set
			{
				if ((this._LastEndTimeWithoutRecordErrors != value))
				{
					this.OnLastEndTimeWithoutRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastEndTimeWithoutRecordErrors = value;
					this.SendPropertyChanged("LastEndTimeWithoutRecordErrors");
					this.OnLastEndTimeWithoutRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTimeWithoutRuntimeErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStartTimeWithoutRuntimeErrors
		{
			get
			{
				return this._LastStartTimeWithoutRuntimeErrors;
			}
			set
			{
				if ((this._LastStartTimeWithoutRuntimeErrors != value))
				{
					this.OnLastStartTimeWithoutRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastStartTimeWithoutRuntimeErrors = value;
					this.SendPropertyChanged("LastStartTimeWithoutRuntimeErrors");
					this.OnLastStartTimeWithoutRuntimeErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTimeWithoutRuntimeErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEndTimeWithoutRuntimeErrors
		{
			get
			{
				return this._LastEndTimeWithoutRuntimeErrors;
			}
			set
			{
				if ((this._LastEndTimeWithoutRuntimeErrors != value))
				{
					this.OnLastEndTimeWithoutRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastEndTimeWithoutRuntimeErrors = value;
					this.SendPropertyChanged("LastEndTimeWithoutRuntimeErrors");
					this.OnLastEndTimeWithoutRuntimeErrorsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
