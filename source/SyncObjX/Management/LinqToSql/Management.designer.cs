#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyncObjX.Management.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SyncObjX")]
	public partial class QueueManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertJobQueueStatus(JobQueueStatus instance);
    partial void UpdateJobQueueStatus(JobQueueStatus instance);
    partial void DeleteJobQueueStatus(JobQueueStatus instance);
    partial void InsertJobStepQueue(JobStepQueue instance);
    partial void UpdateJobStepQueue(JobStepQueue instance);
    partial void DeleteJobStepQueue(JobStepQueue instance);
    partial void InsertJobStepQueueStatus(JobStepQueueStatus instance);
    partial void UpdateJobStepQueueStatus(JobStepQueueStatus instance);
    partial void DeleteJobStepQueueStatus(JobStepQueueStatus instance);
    partial void InsertJobQueue(JobQueue instance);
    partial void UpdateJobQueue(JobQueue instance);
    partial void DeleteJobQueue(JobQueue instance);
    partial void InsertJobDataSourceHistory(JobDataSourceHistory instance);
    partial void UpdateJobDataSourceHistory(JobDataSourceHistory instance);
    partial void DeleteJobDataSourceHistory(JobDataSourceHistory instance);
    partial void InsertJobHistory(JobHistory instance);
    partial void UpdateJobHistory(JobHistory instance);
    partial void DeleteJobHistory(JobHistory instance);
    partial void InsertJobStepHistory(JobStepHistory instance);
    partial void UpdateJobStepHistory(JobStepHistory instance);
    partial void DeleteJobStepHistory(JobStepHistory instance);
    #endregion
		
		public QueueManagementDataContext() : 
				base(global::SyncObjX.Properties.Settings.Default.SyncObjXConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QueueManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QueueManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QueueManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QueueManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<JobQueueStatus> JobQueueStatus
		{
			get
			{
				return this.GetTable<JobQueueStatus>();
			}
		}
		
		public System.Data.Linq.Table<JobStepQueue> JobStepQueues
		{
			get
			{
				return this.GetTable<JobStepQueue>();
			}
		}
		
		public System.Data.Linq.Table<JobStepQueueStatus> JobStepQueueStatus
		{
			get
			{
				return this.GetTable<JobStepQueueStatus>();
			}
		}
		
		public System.Data.Linq.Table<JobQueue> JobQueues
		{
			get
			{
				return this.GetTable<JobQueue>();
			}
		}
		
		public System.Data.Linq.Table<JobDataSourceHistory> JobDataSourceHistories
		{
			get
			{
				return this.GetTable<JobDataSourceHistory>();
			}
		}
		
		public System.Data.Linq.Table<JobHistory> JobHistories
		{
			get
			{
				return this.GetTable<JobHistory>();
			}
		}
		
		public System.Data.Linq.Table<JobStepHistory> JobStepHistories
		{
			get
			{
				return this.GetTable<JobStepHistory>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateJobDataSourceHistory")]
		public int UpdateJobDataSourceHistory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> jobId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceDataSourceId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> sourceDataSourceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDataSourceId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> targetDataSourceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueRequestId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> queueRequestId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JobInstanceId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> jobInstanceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActualStartTime", DbType="DateTime")] System.Nullable<System.DateTime> actualStartTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActualEndTime", DbType="DateTime")] System.Nullable<System.DateTime> actualEndTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasRecordErrors", DbType="Bit")] System.Nullable<bool> hasRecordErrors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HasRuntimeErrors", DbType="Bit")] System.Nullable<bool> hasRuntimeErrors)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), jobId, sourceDataSourceId, targetDataSourceId, queueRequestId, jobInstanceId, actualStartTime, actualEndTime, hasRecordErrors, hasRuntimeErrors);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobQueueStatus")]
	public partial class JobQueueStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _JobQueueStatusId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<JobQueue> _JobQueues;
		
		private EntitySet<JobHistory> _JobHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobQueueStatusIdChanging(byte value);
    partial void OnJobQueueStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public JobQueueStatus()
		{
			this._JobQueues = new EntitySet<JobQueue>(new Action<JobQueue>(this.attach_JobQueues), new Action<JobQueue>(this.detach_JobQueues));
			this._JobHistories = new EntitySet<JobHistory>(new Action<JobHistory>(this.attach_JobHistories), new Action<JobHistory>(this.detach_JobHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueStatusId", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte JobQueueStatusId
		{
			get
			{
				return this._JobQueueStatusId;
			}
			set
			{
				if ((this._JobQueueStatusId != value))
				{
					this.OnJobQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueStatusId = value;
					this.SendPropertyChanged("JobQueueStatusId");
					this.OnJobQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueueStatus_JobQueue", Storage="_JobQueues", ThisKey="JobQueueStatusId", OtherKey="JobQueueStatusId")]
		public EntitySet<JobQueue> JobQueues
		{
			get
			{
				return this._JobQueues;
			}
			set
			{
				this._JobQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueueStatus_JobHistory", Storage="_JobHistories", ThisKey="JobQueueStatusId", OtherKey="JobQueueStatusId")]
		public EntitySet<JobHistory> JobHistories
		{
			get
			{
				return this._JobHistories;
			}
			set
			{
				this._JobHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobQueues(JobQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobQueueStatus = this;
		}
		
		private void detach_JobQueues(JobQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobQueueStatus = null;
		}
		
		private void attach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobQueueStatus = this;
		}
		
		private void detach_JobHistories(JobHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobQueueStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobStepQueue")]
	public partial class JobStepQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobStepInstanceId;
		
		private System.Guid _JobInstanceId;
		
		private System.Guid _JobStepId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private byte _OrderIndex;
		
		private System.Nullable<System.DateTime> _ActualStartTime;
		
		private System.Nullable<System.DateTime> _ActualEndTime;
		
		private byte _JobStepQueueStatusId;
		
		private EntityRef<JobStepQueueStatus> _JobStepQueueStatus;
		
		private EntityRef<JobQueue> _JobQueue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobStepInstanceIdChanging(System.Guid value);
    partial void OnJobStepInstanceIdChanged();
    partial void OnJobInstanceIdChanging(System.Guid value);
    partial void OnJobInstanceIdChanged();
    partial void OnJobStepIdChanging(System.Guid value);
    partial void OnJobStepIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnOrderIndexChanging(byte value);
    partial void OnOrderIndexChanged();
    partial void OnActualStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartTimeChanged();
    partial void OnActualEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndTimeChanged();
    partial void OnJobStepQueueStatusIdChanging(byte value);
    partial void OnJobStepQueueStatusIdChanged();
    #endregion
		
		public JobStepQueue()
		{
			this._JobStepQueueStatus = default(EntityRef<JobStepQueueStatus>);
			this._JobQueue = default(EntityRef<JobQueue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepInstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobStepInstanceId
		{
			get
			{
				return this._JobStepInstanceId;
			}
			set
			{
				if ((this._JobStepInstanceId != value))
				{
					this.OnJobStepInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepInstanceId = value;
					this.SendPropertyChanged("JobStepInstanceId");
					this.OnJobStepInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobInstanceId
		{
			get
			{
				return this._JobInstanceId;
			}
			set
			{
				if ((this._JobInstanceId != value))
				{
					if (this._JobQueue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstanceId = value;
					this.SendPropertyChanged("JobInstanceId");
					this.OnJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobStepId
		{
			get
			{
				return this._JobStepId;
			}
			set
			{
				if ((this._JobStepId != value))
				{
					this.OnJobStepIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepId = value;
					this.SendPropertyChanged("JobStepId");
					this.OnJobStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="TinyInt NOT NULL")]
		public byte OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobStepQueueStatusId
		{
			get
			{
				return this._JobStepQueueStatusId;
			}
			set
			{
				if ((this._JobStepQueueStatusId != value))
				{
					if (this._JobStepQueueStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobStepQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepQueueStatusId = value;
					this.SendPropertyChanged("JobStepQueueStatusId");
					this.OnJobStepQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepQueueStatus_JobStepQueue", Storage="_JobStepQueueStatus", ThisKey="JobStepQueueStatusId", OtherKey="JobStepQueueStatusId", IsForeignKey=true)]
		public JobStepQueueStatus JobStepQueueStatus
		{
			get
			{
				return this._JobStepQueueStatus.Entity;
			}
			set
			{
				JobStepQueueStatus previousValue = this._JobStepQueueStatus.Entity;
				if (((previousValue != value) 
							|| (this._JobStepQueueStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobStepQueueStatus.Entity = null;
						previousValue.JobStepQueues.Remove(this);
					}
					this._JobStepQueueStatus.Entity = value;
					if ((value != null))
					{
						value.JobStepQueues.Add(this);
						this._JobStepQueueStatusId = value.JobStepQueueStatusId;
					}
					else
					{
						this._JobStepQueueStatusId = default(byte);
					}
					this.SendPropertyChanged("JobStepQueueStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueue_JobStepQueue", Storage="_JobQueue", ThisKey="JobInstanceId", OtherKey="JobInstanceId", IsForeignKey=true)]
		public JobQueue JobQueue
		{
			get
			{
				return this._JobQueue.Entity;
			}
			set
			{
				JobQueue previousValue = this._JobQueue.Entity;
				if (((previousValue != value) 
							|| (this._JobQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobQueue.Entity = null;
						previousValue.JobStepQueues.Remove(this);
					}
					this._JobQueue.Entity = value;
					if ((value != null))
					{
						value.JobStepQueues.Add(this);
						this._JobInstanceId = value.JobInstanceId;
					}
					else
					{
						this._JobInstanceId = default(System.Guid);
					}
					this.SendPropertyChanged("JobQueue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobStepQueueStatus")]
	public partial class JobStepQueueStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _JobStepQueueStatusId;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<JobStepQueue> _JobStepQueues;
		
		private EntitySet<JobStepHistory> _JobStepHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobStepQueueStatusIdChanging(byte value);
    partial void OnJobStepQueueStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public JobStepQueueStatus()
		{
			this._JobStepQueues = new EntitySet<JobStepQueue>(new Action<JobStepQueue>(this.attach_JobStepQueues), new Action<JobStepQueue>(this.detach_JobStepQueues));
			this._JobStepHistories = new EntitySet<JobStepHistory>(new Action<JobStepHistory>(this.attach_JobStepHistories), new Action<JobStepHistory>(this.detach_JobStepHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepQueueStatusId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte JobStepQueueStatusId
		{
			get
			{
				return this._JobStepQueueStatusId;
			}
			set
			{
				if ((this._JobStepQueueStatusId != value))
				{
					this.OnJobStepQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepQueueStatusId = value;
					this.SendPropertyChanged("JobStepQueueStatusId");
					this.OnJobStepQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepQueueStatus_JobStepQueue", Storage="_JobStepQueues", ThisKey="JobStepQueueStatusId", OtherKey="JobStepQueueStatusId")]
		public EntitySet<JobStepQueue> JobStepQueues
		{
			get
			{
				return this._JobStepQueues;
			}
			set
			{
				this._JobStepQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepQueueStatus_JobStepHistory", Storage="_JobStepHistories", ThisKey="JobStepQueueStatusId", OtherKey="JobStepQueueStatusId")]
		public EntitySet<JobStepHistory> JobStepHistories
		{
			get
			{
				return this._JobStepHistories;
			}
			set
			{
				this._JobStepHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobStepQueues(JobStepQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobStepQueueStatus = this;
		}
		
		private void detach_JobStepQueues(JobStepQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobStepQueueStatus = null;
		}
		
		private void attach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobStepQueueStatus = this;
		}
		
		private void detach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobStepQueueStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobQueue")]
	public partial class JobQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobInstanceId;
		
		private System.Guid _QueueRequestId;
		
		private System.Guid _JobId;
		
		private string _Filters;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.Guid _SourceDataSourceId;
		
		private System.Guid _TargetDataSourceId;
		
		private string _InvocationSource;
		
		private System.DateTime _ScheduledStartTime;
		
		private System.Nullable<System.DateTime> _ActualStartTime;
		
		private bool _IsOnDemand;
		
		private byte _JobQueueStatusId;
		
		private EntitySet<JobStepQueue> _JobStepQueues;
		
		private EntityRef<JobQueueStatus> _JobQueueStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobInstanceIdChanging(System.Guid value);
    partial void OnJobInstanceIdChanged();
    partial void OnQueueRequestIdChanging(System.Guid value);
    partial void OnQueueRequestIdChanged();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnSourceDataSourceIdChanging(System.Guid value);
    partial void OnSourceDataSourceIdChanged();
    partial void OnTargetDataSourceIdChanging(System.Guid value);
    partial void OnTargetDataSourceIdChanged();
    partial void OnInvocationSourceChanging(string value);
    partial void OnInvocationSourceChanged();
    partial void OnScheduledStartTimeChanging(System.DateTime value);
    partial void OnScheduledStartTimeChanged();
    partial void OnActualStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartTimeChanged();
    partial void OnIsOnDemandChanging(bool value);
    partial void OnIsOnDemandChanged();
    partial void OnJobQueueStatusIdChanging(byte value);
    partial void OnJobQueueStatusIdChanged();
    #endregion
		
		public JobQueue()
		{
			this._JobStepQueues = new EntitySet<JobStepQueue>(new Action<JobStepQueue>(this.attach_JobStepQueues), new Action<JobStepQueue>(this.detach_JobStepQueues));
			this._JobQueueStatus = default(EntityRef<JobQueueStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstanceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobInstanceId
		{
			get
			{
				return this._JobInstanceId;
			}
			set
			{
				if ((this._JobInstanceId != value))
				{
					this.OnJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstanceId = value;
					this.SendPropertyChanged("JobInstanceId");
					this.OnJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueRequestId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QueueRequestId
		{
			get
			{
				return this._QueueRequestId;
			}
			set
			{
				if ((this._QueueRequestId != value))
				{
					this.OnQueueRequestIdChanging(value);
					this.SendPropertyChanging();
					this._QueueRequestId = value;
					this.SendPropertyChanged("QueueRequestId");
					this.OnQueueRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NVarChar(MAX)")]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDataSourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SourceDataSourceId
		{
			get
			{
				return this._SourceDataSourceId;
			}
			set
			{
				if ((this._SourceDataSourceId != value))
				{
					this.OnSourceDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceDataSourceId = value;
					this.SendPropertyChanged("SourceDataSourceId");
					this.OnSourceDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDataSourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TargetDataSourceId
		{
			get
			{
				return this._TargetDataSourceId;
			}
			set
			{
				if ((this._TargetDataSourceId != value))
				{
					this.OnTargetDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDataSourceId = value;
					this.SendPropertyChanged("TargetDataSourceId");
					this.OnTargetDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvocationSource", DbType="NVarChar(50)")]
		public string InvocationSource
		{
			get
			{
				return this._InvocationSource;
			}
			set
			{
				if ((this._InvocationSource != value))
				{
					this.OnInvocationSourceChanging(value);
					this.SendPropertyChanging();
					this._InvocationSource = value;
					this.SendPropertyChanged("InvocationSource");
					this.OnInvocationSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledStartTime
		{
			get
			{
				return this._ScheduledStartTime;
			}
			set
			{
				if ((this._ScheduledStartTime != value))
				{
					this.OnScheduledStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledStartTime = value;
					this.SendPropertyChanged("ScheduledStartTime");
					this.OnScheduledStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnDemand", DbType="Bit NOT NULL")]
		public bool IsOnDemand
		{
			get
			{
				return this._IsOnDemand;
			}
			set
			{
				if ((this._IsOnDemand != value))
				{
					this.OnIsOnDemandChanging(value);
					this.SendPropertyChanging();
					this._IsOnDemand = value;
					this.SendPropertyChanged("IsOnDemand");
					this.OnIsOnDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobQueueStatusId
		{
			get
			{
				return this._JobQueueStatusId;
			}
			set
			{
				if ((this._JobQueueStatusId != value))
				{
					if (this._JobQueueStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueStatusId = value;
					this.SendPropertyChanged("JobQueueStatusId");
					this.OnJobQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueue_JobStepQueue", Storage="_JobStepQueues", ThisKey="JobInstanceId", OtherKey="JobInstanceId")]
		public EntitySet<JobStepQueue> JobStepQueues
		{
			get
			{
				return this._JobStepQueues;
			}
			set
			{
				this._JobStepQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueueStatus_JobQueue", Storage="_JobQueueStatus", ThisKey="JobQueueStatusId", OtherKey="JobQueueStatusId", IsForeignKey=true)]
		public JobQueueStatus JobQueueStatus
		{
			get
			{
				return this._JobQueueStatus.Entity;
			}
			set
			{
				JobQueueStatus previousValue = this._JobQueueStatus.Entity;
				if (((previousValue != value) 
							|| (this._JobQueueStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobQueueStatus.Entity = null;
						previousValue.JobQueues.Remove(this);
					}
					this._JobQueueStatus.Entity = value;
					if ((value != null))
					{
						value.JobQueues.Add(this);
						this._JobQueueStatusId = value.JobQueueStatusId;
					}
					else
					{
						this._JobQueueStatusId = default(byte);
					}
					this.SendPropertyChanged("JobQueueStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobStepQueues(JobStepQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobQueue = this;
		}
		
		private void detach_JobStepQueues(JobStepQueue entity)
		{
			this.SendPropertyChanging();
			entity.JobQueue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobDataSourceHistory")]
	public partial class JobDataSourceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JobId;
		
		private System.Guid _SourceDataSourceId;
		
		private System.Guid _TargetDataSourceId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private System.Guid _LastQueueRequestId;
		
		private System.Guid _LastJobInstanceId;
		
		private System.DateTime _LastStartTime;
		
		private System.DateTime _LastEndTime;
		
		private System.Nullable<System.DateTime> _LastStartTimeWithoutRecordErrors;
		
		private System.Nullable<System.DateTime> _LastEndTimeWithoutRecordErrors;
		
		private System.Nullable<System.DateTime> _LastStartTimeWithoutRuntimeErrors;
		
		private System.Nullable<System.DateTime> _LastEndTimeWithoutRuntimeErrors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnSourceDataSourceIdChanging(System.Guid value);
    partial void OnSourceDataSourceIdChanged();
    partial void OnTargetDataSourceIdChanging(System.Guid value);
    partial void OnTargetDataSourceIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnLastQueueRequestIdChanging(System.Guid value);
    partial void OnLastQueueRequestIdChanged();
    partial void OnLastJobInstanceIdChanging(System.Guid value);
    partial void OnLastJobInstanceIdChanged();
    partial void OnLastStartTimeChanging(System.DateTime value);
    partial void OnLastStartTimeChanged();
    partial void OnLastEndTimeChanging(System.DateTime value);
    partial void OnLastEndTimeChanged();
    partial void OnLastStartTimeWithoutRecordErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStartTimeWithoutRecordErrorsChanged();
    partial void OnLastEndTimeWithoutRecordErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEndTimeWithoutRecordErrorsChanged();
    partial void OnLastStartTimeWithoutRuntimeErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastStartTimeWithoutRuntimeErrorsChanged();
    partial void OnLastEndTimeWithoutRuntimeErrorsChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEndTimeWithoutRuntimeErrorsChanged();
    #endregion
		
		public JobDataSourceHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SourceDataSourceId
		{
			get
			{
				return this._SourceDataSourceId;
			}
			set
			{
				if ((this._SourceDataSourceId != value))
				{
					this.OnSourceDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceDataSourceId = value;
					this.SendPropertyChanged("SourceDataSourceId");
					this.OnSourceDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDataSourceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TargetDataSourceId
		{
			get
			{
				return this._TargetDataSourceId;
			}
			set
			{
				if ((this._TargetDataSourceId != value))
				{
					this.OnTargetDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDataSourceId = value;
					this.SendPropertyChanged("TargetDataSourceId");
					this.OnTargetDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastQueueRequestId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LastQueueRequestId
		{
			get
			{
				return this._LastQueueRequestId;
			}
			set
			{
				if ((this._LastQueueRequestId != value))
				{
					this.OnLastQueueRequestIdChanging(value);
					this.SendPropertyChanging();
					this._LastQueueRequestId = value;
					this.SendPropertyChanged("LastQueueRequestId");
					this.OnLastQueueRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastJobInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LastJobInstanceId
		{
			get
			{
				return this._LastJobInstanceId;
			}
			set
			{
				if ((this._LastJobInstanceId != value))
				{
					this.OnLastJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._LastJobInstanceId = value;
					this.SendPropertyChanged("LastJobInstanceId");
					this.OnLastJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastStartTime
		{
			get
			{
				return this._LastStartTime;
			}
			set
			{
				if ((this._LastStartTime != value))
				{
					this.OnLastStartTimeChanging(value);
					this.SendPropertyChanging();
					this._LastStartTime = value;
					this.SendPropertyChanged("LastStartTime");
					this.OnLastStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime LastEndTime
		{
			get
			{
				return this._LastEndTime;
			}
			set
			{
				if ((this._LastEndTime != value))
				{
					this.OnLastEndTimeChanging(value);
					this.SendPropertyChanging();
					this._LastEndTime = value;
					this.SendPropertyChanged("LastEndTime");
					this.OnLastEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTimeWithoutRecordErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStartTimeWithoutRecordErrors
		{
			get
			{
				return this._LastStartTimeWithoutRecordErrors;
			}
			set
			{
				if ((this._LastStartTimeWithoutRecordErrors != value))
				{
					this.OnLastStartTimeWithoutRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastStartTimeWithoutRecordErrors = value;
					this.SendPropertyChanged("LastStartTimeWithoutRecordErrors");
					this.OnLastStartTimeWithoutRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTimeWithoutRecordErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEndTimeWithoutRecordErrors
		{
			get
			{
				return this._LastEndTimeWithoutRecordErrors;
			}
			set
			{
				if ((this._LastEndTimeWithoutRecordErrors != value))
				{
					this.OnLastEndTimeWithoutRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastEndTimeWithoutRecordErrors = value;
					this.SendPropertyChanged("LastEndTimeWithoutRecordErrors");
					this.OnLastEndTimeWithoutRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastStartTimeWithoutRuntimeErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastStartTimeWithoutRuntimeErrors
		{
			get
			{
				return this._LastStartTimeWithoutRuntimeErrors;
			}
			set
			{
				if ((this._LastStartTimeWithoutRuntimeErrors != value))
				{
					this.OnLastStartTimeWithoutRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastStartTimeWithoutRuntimeErrors = value;
					this.SendPropertyChanged("LastStartTimeWithoutRuntimeErrors");
					this.OnLastStartTimeWithoutRuntimeErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEndTimeWithoutRuntimeErrors", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEndTimeWithoutRuntimeErrors
		{
			get
			{
				return this._LastEndTimeWithoutRuntimeErrors;
			}
			set
			{
				if ((this._LastEndTimeWithoutRuntimeErrors != value))
				{
					this.OnLastEndTimeWithoutRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._LastEndTimeWithoutRuntimeErrors = value;
					this.SendPropertyChanged("LastEndTimeWithoutRuntimeErrors");
					this.OnLastEndTimeWithoutRuntimeErrorsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobHistory")]
	public partial class JobHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobHistoryId;
		
		private System.Guid _JobInstanceId;
		
		private System.Guid _QueueRequestId;
		
		private System.Guid _JobId;
		
		private System.Guid _SourceDataSourceId;
		
		private System.Guid _TargetDataSourceId;
		
		private string _Filters;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private string _InvocationSource;
		
		private System.DateTime _ScheduledStartTime;
		
		private System.Nullable<System.DateTime> _ActualStartTime;
		
		private System.Nullable<System.TimeSpan> _TimeToStartDelay;
		
		private System.Nullable<System.DateTime> _ActualEndTime;
		
		private System.Nullable<System.TimeSpan> _ActualDuration;
		
		private bool _IsOnDemand;
		
		private byte _JobQueueStatusId;
		
		private bool _HasRecordErrors;
		
		private bool _HasRuntimeErrors;
		
		private EntitySet<JobStepHistory> _JobStepHistories;
		
		private EntityRef<JobQueueStatus> _JobQueueStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnJobInstanceIdChanging(System.Guid value);
    partial void OnJobInstanceIdChanged();
    partial void OnQueueRequestIdChanging(System.Guid value);
    partial void OnQueueRequestIdChanged();
    partial void OnJobIdChanging(System.Guid value);
    partial void OnJobIdChanged();
    partial void OnSourceDataSourceIdChanging(System.Guid value);
    partial void OnSourceDataSourceIdChanged();
    partial void OnTargetDataSourceIdChanging(System.Guid value);
    partial void OnTargetDataSourceIdChanged();
    partial void OnFiltersChanging(string value);
    partial void OnFiltersChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnInvocationSourceChanging(string value);
    partial void OnInvocationSourceChanged();
    partial void OnScheduledStartTimeChanging(System.DateTime value);
    partial void OnScheduledStartTimeChanged();
    partial void OnActualStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartTimeChanged();
    partial void OnTimeToStartDelayChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeToStartDelayChanged();
    partial void OnActualEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndTimeChanged();
    partial void OnActualDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnActualDurationChanged();
    partial void OnIsOnDemandChanging(bool value);
    partial void OnIsOnDemandChanged();
    partial void OnJobQueueStatusIdChanging(byte value);
    partial void OnJobQueueStatusIdChanged();
    partial void OnHasRecordErrorsChanging(bool value);
    partial void OnHasRecordErrorsChanged();
    partial void OnHasRuntimeErrorsChanging(bool value);
    partial void OnHasRuntimeErrorsChanged();
    #endregion
		
		public JobHistory()
		{
			this._JobStepHistories = new EntitySet<JobStepHistory>(new Action<JobStepHistory>(this.attach_JobStepHistories), new Action<JobStepHistory>(this.detach_JobStepHistories));
			this._JobQueueStatus = default(EntityRef<JobQueueStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobInstanceId
		{
			get
			{
				return this._JobInstanceId;
			}
			set
			{
				if ((this._JobInstanceId != value))
				{
					this.OnJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstanceId = value;
					this.SendPropertyChanged("JobInstanceId");
					this.OnJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueRequestId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QueueRequestId
		{
			get
			{
				return this._QueueRequestId;
			}
			set
			{
				if ((this._QueueRequestId != value))
				{
					this.OnQueueRequestIdChanging(value);
					this.SendPropertyChanging();
					this._QueueRequestId = value;
					this.SendPropertyChanged("QueueRequestId");
					this.OnQueueRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceDataSourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SourceDataSourceId
		{
			get
			{
				return this._SourceDataSourceId;
			}
			set
			{
				if ((this._SourceDataSourceId != value))
				{
					this.OnSourceDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceDataSourceId = value;
					this.SendPropertyChanged("SourceDataSourceId");
					this.OnSourceDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDataSourceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TargetDataSourceId
		{
			get
			{
				return this._TargetDataSourceId;
			}
			set
			{
				if ((this._TargetDataSourceId != value))
				{
					this.OnTargetDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._TargetDataSourceId = value;
					this.SendPropertyChanged("TargetDataSourceId");
					this.OnTargetDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filters", DbType="NVarChar(MAX)")]
		public string Filters
		{
			get
			{
				return this._Filters;
			}
			set
			{
				if ((this._Filters != value))
				{
					this.OnFiltersChanging(value);
					this.SendPropertyChanging();
					this._Filters = value;
					this.SendPropertyChanged("Filters");
					this.OnFiltersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvocationSource", DbType="NVarChar(50)")]
		public string InvocationSource
		{
			get
			{
				return this._InvocationSource;
			}
			set
			{
				if ((this._InvocationSource != value))
				{
					this.OnInvocationSourceChanging(value);
					this.SendPropertyChanging();
					this._InvocationSource = value;
					this.SendPropertyChanged("InvocationSource");
					this.OnInvocationSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledStartTime
		{
			get
			{
				return this._ScheduledStartTime;
			}
			set
			{
				if ((this._ScheduledStartTime != value))
				{
					this.OnScheduledStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ScheduledStartTime = value;
					this.SendPropertyChanged("ScheduledStartTime");
					this.OnScheduledStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeToStartDelay", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeToStartDelay
		{
			get
			{
				return this._TimeToStartDelay;
			}
			set
			{
				if ((this._TimeToStartDelay != value))
				{
					this.OnTimeToStartDelayChanging(value);
					this.SendPropertyChanging();
					this._TimeToStartDelay = value;
					this.SendPropertyChanged("TimeToStartDelay");
					this.OnTimeToStartDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualDuration", DbType="Time")]
		public System.Nullable<System.TimeSpan> ActualDuration
		{
			get
			{
				return this._ActualDuration;
			}
			set
			{
				if ((this._ActualDuration != value))
				{
					this.OnActualDurationChanging(value);
					this.SendPropertyChanging();
					this._ActualDuration = value;
					this.SendPropertyChanged("ActualDuration");
					this.OnActualDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnDemand", DbType="Bit NOT NULL")]
		public bool IsOnDemand
		{
			get
			{
				return this._IsOnDemand;
			}
			set
			{
				if ((this._IsOnDemand != value))
				{
					this.OnIsOnDemandChanging(value);
					this.SendPropertyChanging();
					this._IsOnDemand = value;
					this.SendPropertyChanged("IsOnDemand");
					this.OnIsOnDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobQueueStatusId
		{
			get
			{
				return this._JobQueueStatusId;
			}
			set
			{
				if ((this._JobQueueStatusId != value))
				{
					if (this._JobQueueStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobQueueStatusId = value;
					this.SendPropertyChanged("JobQueueStatusId");
					this.OnJobQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRecordErrors", DbType="Bit NOT NULL")]
		public bool HasRecordErrors
		{
			get
			{
				return this._HasRecordErrors;
			}
			set
			{
				if ((this._HasRecordErrors != value))
				{
					this.OnHasRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasRecordErrors = value;
					this.SendPropertyChanged("HasRecordErrors");
					this.OnHasRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRuntimeErrors", DbType="Bit NOT NULL")]
		public bool HasRuntimeErrors
		{
			get
			{
				return this._HasRuntimeErrors;
			}
			set
			{
				if ((this._HasRuntimeErrors != value))
				{
					this.OnHasRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasRuntimeErrors = value;
					this.SendPropertyChanged("HasRuntimeErrors");
					this.OnHasRuntimeErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_JobStepHistory", Storage="_JobStepHistories", ThisKey="JobHistoryId", OtherKey="JobHistoryId")]
		public EntitySet<JobStepHistory> JobStepHistories
		{
			get
			{
				return this._JobStepHistories;
			}
			set
			{
				this._JobStepHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobQueueStatus_JobHistory", Storage="_JobQueueStatus", ThisKey="JobQueueStatusId", OtherKey="JobQueueStatusId", IsForeignKey=true)]
		public JobQueueStatus JobQueueStatus
		{
			get
			{
				return this._JobQueueStatus.Entity;
			}
			set
			{
				JobQueueStatus previousValue = this._JobQueueStatus.Entity;
				if (((previousValue != value) 
							|| (this._JobQueueStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobQueueStatus.Entity = null;
						previousValue.JobHistories.Remove(this);
					}
					this._JobQueueStatus.Entity = value;
					if ((value != null))
					{
						value.JobHistories.Add(this);
						this._JobQueueStatusId = value.JobQueueStatusId;
					}
					else
					{
						this._JobQueueStatusId = default(byte);
					}
					this.SendPropertyChanged("JobQueueStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = this;
		}
		
		private void detach_JobStepHistories(JobStepHistory entity)
		{
			this.SendPropertyChanging();
			entity.JobHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobStepHistory")]
	public partial class JobStepHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobStepHistoryId;
		
		private System.Guid _JobStepInstanceId;
		
		private System.Guid _JobInstanceId;
		
		private int _JobHistoryId;
		
		private System.Guid _JobStepId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private byte _OrderIndex;
		
		private System.Nullable<System.DateTime> _ActualStartTime;
		
		private System.Nullable<System.DateTime> _ActualEndTime;
		
		private System.Nullable<System.TimeSpan> _ActualDuration;
		
		private byte _JobStepQueueStatusId;
		
		private bool _HasRecordErrors;
		
		private bool _HasRuntimeErrors;
		
		private EntityRef<JobHistory> _JobHistory;
		
		private EntityRef<JobStepQueueStatus> _JobStepQueueStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobStepHistoryIdChanging(int value);
    partial void OnJobStepHistoryIdChanged();
    partial void OnJobStepInstanceIdChanging(System.Guid value);
    partial void OnJobStepInstanceIdChanged();
    partial void OnJobInstanceIdChanging(System.Guid value);
    partial void OnJobInstanceIdChanged();
    partial void OnJobHistoryIdChanging(int value);
    partial void OnJobHistoryIdChanged();
    partial void OnJobStepIdChanging(System.Guid value);
    partial void OnJobStepIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnOrderIndexChanging(byte value);
    partial void OnOrderIndexChanged();
    partial void OnActualStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartTimeChanged();
    partial void OnActualEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndTimeChanged();
    partial void OnActualDurationChanging(System.Nullable<System.TimeSpan> value);
    partial void OnActualDurationChanged();
    partial void OnJobStepQueueStatusIdChanging(byte value);
    partial void OnJobStepQueueStatusIdChanged();
    partial void OnHasRecordErrorsChanging(bool value);
    partial void OnHasRecordErrorsChanged();
    partial void OnHasRuntimeErrorsChanging(bool value);
    partial void OnHasRuntimeErrorsChanged();
    #endregion
		
		public JobStepHistory()
		{
			this._JobHistory = default(EntityRef<JobHistory>);
			this._JobStepQueueStatus = default(EntityRef<JobStepQueueStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobStepHistoryId
		{
			get
			{
				return this._JobStepHistoryId;
			}
			set
			{
				if ((this._JobStepHistoryId != value))
				{
					this.OnJobStepHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepHistoryId = value;
					this.SendPropertyChanged("JobStepHistoryId");
					this.OnJobStepHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobStepInstanceId
		{
			get
			{
				return this._JobStepInstanceId;
			}
			set
			{
				if ((this._JobStepInstanceId != value))
				{
					this.OnJobStepInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepInstanceId = value;
					this.SendPropertyChanged("JobStepInstanceId");
					this.OnJobStepInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobInstanceId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobInstanceId
		{
			get
			{
				return this._JobInstanceId;
			}
			set
			{
				if ((this._JobInstanceId != value))
				{
					this.OnJobInstanceIdChanging(value);
					this.SendPropertyChanging();
					this._JobInstanceId = value;
					this.SendPropertyChanged("JobInstanceId");
					this.OnJobInstanceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobHistoryId", DbType="Int NOT NULL")]
		public int JobHistoryId
		{
			get
			{
				return this._JobHistoryId;
			}
			set
			{
				if ((this._JobHistoryId != value))
				{
					if (this._JobHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._JobHistoryId = value;
					this.SendPropertyChanged("JobHistoryId");
					this.OnJobHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JobStepId
		{
			get
			{
				return this._JobStepId;
			}
			set
			{
				if ((this._JobStepId != value))
				{
					this.OnJobStepIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepId = value;
					this.SendPropertyChanged("JobStepId");
					this.OnJobStepIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="TinyInt NOT NULL")]
		public byte OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartTime
		{
			get
			{
				return this._ActualStartTime;
			}
			set
			{
				if ((this._ActualStartTime != value))
				{
					this.OnActualStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualStartTime = value;
					this.SendPropertyChanged("ActualStartTime");
					this.OnActualStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualEndTime
		{
			get
			{
				return this._ActualEndTime;
			}
			set
			{
				if ((this._ActualEndTime != value))
				{
					this.OnActualEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualEndTime = value;
					this.SendPropertyChanged("ActualEndTime");
					this.OnActualEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualDuration", DbType="Time")]
		public System.Nullable<System.TimeSpan> ActualDuration
		{
			get
			{
				return this._ActualDuration;
			}
			set
			{
				if ((this._ActualDuration != value))
				{
					this.OnActualDurationChanging(value);
					this.SendPropertyChanging();
					this._ActualDuration = value;
					this.SendPropertyChanged("ActualDuration");
					this.OnActualDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobStepQueueStatusId", DbType="TinyInt NOT NULL")]
		public byte JobStepQueueStatusId
		{
			get
			{
				return this._JobStepQueueStatusId;
			}
			set
			{
				if ((this._JobStepQueueStatusId != value))
				{
					if (this._JobStepQueueStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobStepQueueStatusIdChanging(value);
					this.SendPropertyChanging();
					this._JobStepQueueStatusId = value;
					this.SendPropertyChanged("JobStepQueueStatusId");
					this.OnJobStepQueueStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRecordErrors", DbType="Bit NOT NULL")]
		public bool HasRecordErrors
		{
			get
			{
				return this._HasRecordErrors;
			}
			set
			{
				if ((this._HasRecordErrors != value))
				{
					this.OnHasRecordErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasRecordErrors = value;
					this.SendPropertyChanged("HasRecordErrors");
					this.OnHasRecordErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRuntimeErrors", DbType="Bit NOT NULL")]
		public bool HasRuntimeErrors
		{
			get
			{
				return this._HasRuntimeErrors;
			}
			set
			{
				if ((this._HasRuntimeErrors != value))
				{
					this.OnHasRuntimeErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasRuntimeErrors = value;
					this.SendPropertyChanged("HasRuntimeErrors");
					this.OnHasRuntimeErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobHistory_JobStepHistory", Storage="_JobHistory", ThisKey="JobHistoryId", OtherKey="JobHistoryId", IsForeignKey=true)]
		public JobHistory JobHistory
		{
			get
			{
				return this._JobHistory.Entity;
			}
			set
			{
				JobHistory previousValue = this._JobHistory.Entity;
				if (((previousValue != value) 
							|| (this._JobHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobHistory.Entity = null;
						previousValue.JobStepHistories.Remove(this);
					}
					this._JobHistory.Entity = value;
					if ((value != null))
					{
						value.JobStepHistories.Add(this);
						this._JobHistoryId = value.JobHistoryId;
					}
					else
					{
						this._JobHistoryId = default(int);
					}
					this.SendPropertyChanged("JobHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStepQueueStatus_JobStepHistory", Storage="_JobStepQueueStatus", ThisKey="JobStepQueueStatusId", OtherKey="JobStepQueueStatusId", IsForeignKey=true)]
		public JobStepQueueStatus JobStepQueueStatus
		{
			get
			{
				return this._JobStepQueueStatus.Entity;
			}
			set
			{
				JobStepQueueStatus previousValue = this._JobStepQueueStatus.Entity;
				if (((previousValue != value) 
							|| (this._JobStepQueueStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobStepQueueStatus.Entity = null;
						previousValue.JobStepHistories.Remove(this);
					}
					this._JobStepQueueStatus.Entity = value;
					if ((value != null))
					{
						value.JobStepHistories.Add(this);
						this._JobStepQueueStatusId = value.JobStepQueueStatusId;
					}
					else
					{
						this._JobStepQueueStatusId = default(byte);
					}
					this.SendPropertyChanged("JobStepQueueStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
